{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/projektek/bmi/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\n\nconst App = () => {\n  let [height, setHeight] = useState(0);\n  let [weight, setWeight] = useState(0);\n  let [heightErr, setHeightErr] = useState(\"\");\n  let [weightErr, setWeightErr] = useState(\"\");\n  let [bmiValue, setBmiValue] = useState(\"\");\n  let [bmiText, setBmiText] = useState(\"\");\n  let [chonkVisibility, setChonkVisibility] = useState(\"invisibleChonk\");\n  let [text, setText] = useState(\"\");\n  let [resultChonk, setResultChonk] = useState(\"visibleChonk\");\n  let AllChonkImg = {\n    slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n    normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/4.jpg\", \"./images/normal/5.jpg\"],\n    fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n    tooFatChonk: [\"./images/2fat/1.jpg\", \"./images/2fat/2.jpg\", \"./images/2fat/3.jpg\", \"./images/2fat/4.jpg\", \"./images/2fat/5.jpg\", \"./images/2fat/6.jpg\"]\n  };\n  const minHeight = 95;\n  const maxHeight = 220;\n  const minWeight = 10;\n  const maxWeight = 300;\n  const slimThre = 18.5;\n  const normalThre = 24.9;\n  const fatThre = 29.9;\n\n  const handleHeightChange = event => {\n    //spinner\n    setHeight(event.target.value);\n  };\n\n  const handleWeightChange = event => {\n    //spinner\n    setWeight(event.target.value);\n  };\n\n  const handleHeightSliderChange = value => {\n    //range\n    setHeight(value);\n  };\n\n  const handleWeightSliderChange = value => {\n    //range\n    setWeight(value);\n  }; //limiting input to numbers\n\n\n  const handleKeyPress = (source, event) => {\n    let allowedChars = \".0123456789\";\n    let currentChar = event.key;\n    let found = false;\n\n    for (let i = 0; i < allowedChars.length; i++) {\n      if (currentChar === allowedChars[i]) {\n        found = true;\n      }\n    }\n\n    if (found === false) {\n      event.preventDefault();\n      return;\n    } //limiting number input in height/weight\n\n\n    let currentValue = 0;\n\n    if (source === 'height') {\n      currentValue = parseInt(height + currentChar);\n\n      if (currentValue > maxHeight) {\n        event.preventDefault();\n      }\n    } else {\n      currentValue = weight + currentChar;\n\n      if (currentValue > maxWeight) {\n        event.preventDefault();\n      }\n    }\n  }; //classifying the results w/images, calculating BMI\n\n\n  const classifyResult = result => {\n    if (result < slimThre) {\n      return \"slim\";\n    }\n\n    if (result <= normalThre) {\n      return \"normal\";\n    }\n\n    if (result <= fatThre) {\n      return \"fat\";\n    }\n\n    return \"tooFat\";\n  }; //height, weight validation and min/max manual input nrs \n\n\n  const validate = () => {\n    setHeightErr(\"\");\n    setWeightErr(\"\");\n    let heightErrStr = \"\";\n    let weightErrStr = \"\"; //error messageges for H/W\n\n    if (!height) {\n      heightErrStr = \"Please, enter height\";\n    } else if (height < minHeight) {\n      heightErrStr = \"Greater than 95, please\";\n    } else if (height > maxHeight) {\n      heightErrStr = \"Less than 220, please\";\n    }\n\n    if (!weight) {\n      weightErrStr = \"Please, enter weight\";\n    } else if (weight < minWeight) {\n      weightErrStr = \"Greater than 10, please\";\n    } else if (weight > maxWeight) {\n      weightErrStr = \"Less than 300, please\";\n    }\n\n    if (heightErrStr || weightErrStr) {\n      setHeightErr(heightErrStr);\n      setWeightErr(weightErrStr);\n      return false;\n    }\n\n    return true;\n  }; //calc BMI\n\n\n  const calcBmi = event => {\n    if (!validate()) {\n      return;\n    }\n\n    let bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    let chonks = null;\n    let resultString = \"\";\n\n    switch (classifyResult(bmi)) {\n      case \"slim\":\n        {\n          chonks = AllChonkImg.slimChonk;\n          resultString = \"You're pretty slonky, have a KitKat!\";\n          break;\n        }\n\n      case \"normal\":\n        {\n          chonks = AllChonkImg.normalChonk;\n          resultString = \"You're okay...for now.\";\n          break;\n        }\n\n      case \"fat\":\n        {\n          chonks = AllChonkImg.fatChonk;\n          resultString = \"You're getting kind of fat...\";\n          break;\n        }\n\n      case \"tooFat\":\n        {\n          chonks = AllChonkImg.tooFatChonk;\n          resultString = \"You're quite the chonker, there!\";\n          break;\n        }\n\n      default:\n        {}\n    } // getting random images & avoiding duplicates\n\n\n    let randNum = Math.floor(Math.random() * chonks.length);\n    let randChonk = chonks[randNum];\n\n    if (resultChonk === randChonk) {\n      calcBmi(event);\n      return;\n    }\n\n    setResultChonk(randChonk);\n    setChonkVisibility(\"visibleChonk\");\n    setBmiText(resultString);\n    setBmiValue(bmi);\n    setText(\"invisibleChonk\");\n  }; // clear button\n\n\n  const clear = event => {\n    event.preventDefault();\n    setHeight(0);\n    setWeight(0);\n    setBmiValue(\"\");\n    setChonkVisibility(\"invisibleChonk\");\n    setHeightErr(\"\");\n    setWeightErr(\"\");\n    setText(\"visibleChonk\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, \"Calculate Your Body Mass Index\")), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"Height (95cm-220cm)\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"height\",\n    step: \"1\",\n    placeholder: \"cm\",\n    min: minHeight,\n    max: maxHeight,\n    value: height,\n    onChange: handleHeightChange,\n    onKeyPress: handleKeyPress.bind(this, 'height'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, heightErr), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: minHeight,\n    max: maxHeight,\n    step: 1,\n    value: height,\n    onChange: handleHeightSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 19\n    }\n  }, \"Weight (10kg-300kg)\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"weight\",\n    step: \"0.5\",\n    placeholder: \"kg\",\n    min: minWeight,\n    max: maxWeight,\n    value: weight,\n    onChange: handleWeightChange,\n    onKeyPress: handleKeyPress.bind(this, 'weight'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 18\n    }\n  }, weightErr), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"slider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    min: minWeight,\n    max: maxWeight,\n    step: 0.5,\n    value: weight,\n    onChange: handleWeightSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 18\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: event => {\n      event.preventDefault();\n      calcBmi();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 19\n    }\n  }, \"Clear\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: chonkVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: resultChonk,\n    alt: \"pictures of cats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"result-top-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, \"Your current BMI: \", bmiValue, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bmi-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 15\n    }\n  }, bmiText)), /*#__PURE__*/React.createElement(\"div\", {\n    className: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }, \"Body mass index, abbreviated BMI, is a key index for relating weight to height.\", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 19\n    }\n  }), \"BMI is a person's weight in kilograms (kg) divided by his or her height in meters squared. The National Institutes of Health (NIH) now defines normal weight, overweight, and obesity according to BMI rather than the traditional height/weight charts.\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }, \"Overweight is a BMI of 25\\u201329.9\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 21\n    }\n  }, \"Obesity is a BMI of 30 or more\")), \"A very muscular person might have a high BMI without health risks.\"))) //container\n  ;\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sebestyenboglarka/projektek/bmi/src/App.js"],"names":["React","useState","Slider","App","height","setHeight","weight","setWeight","heightErr","setHeightErr","weightErr","setWeightErr","bmiValue","setBmiValue","bmiText","setBmiText","chonkVisibility","setChonkVisibility","text","setText","resultChonk","setResultChonk","AllChonkImg","slimChonk","normalChonk","fatChonk","tooFatChonk","minHeight","maxHeight","minWeight","maxWeight","slimThre","normalThre","fatThre","handleHeightChange","event","target","value","handleWeightChange","handleHeightSliderChange","handleWeightSliderChange","handleKeyPress","source","allowedChars","currentChar","key","found","i","length","preventDefault","currentValue","parseInt","classifyResult","result","validate","heightErrStr","weightErrStr","calcBmi","bmi","toFixed","chonks","resultString","randNum","Math","floor","random","randChonk","clear","bind"],"mappings":";AAAI,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAO,iCAAP;;AAGC,MAAMC,GAAG,GAAG,MAAO;AAClB,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAI,CAACK,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAI,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAI,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAApC;AACA,MAAI,CAACe,eAAD,EAAkBC,kBAAlB,IAAwChB,QAAQ,CAAC,gBAAD,CAApD;AACA,MAAI,CAACiB,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAAC,EAAD,CAA9B;AACA,MAAI,CAACmB,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,cAAD,CAA5C;AACA,MAAIqB,WAAW,GAAG;AAChBC,IAAAA,SAAS,EAAE,CAAC,qBAAD,EAAwB,qBAAxB,EAA+C,qBAA/C,EAAsE,qBAAtE,CADK;AAEdC,IAAAA,WAAW,EAAE,CAAC,uBAAD,EAA0B,uBAA1B,EAAmD,uBAAnD,EAA4E,uBAA5E,EAAqG,uBAArG,CAFC;AAGdC,IAAAA,QAAQ,EAAE,CAAC,oBAAD,EAAuB,oBAAvB,EAA6C,oBAA7C,EAAmE,oBAAnE,CAHI;AAIdC,IAAAA,WAAW,EAAE,CAAC,qBAAD,EAAwB,qBAAxB,EAA+C,qBAA/C,EAAsE,qBAAtE,EAA6F,qBAA7F,EAAoH,qBAApH;AAJC,GAAlB;AAOA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,SAAS,GAAG,GAAlB;AACA,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAMC,SAAS,GAAG,GAAlB;AACA,QAAMC,QAAQ,GAAG,IAAjB;AACA,QAAMC,UAAU,GAAG,IAAnB;AACA,QAAMC,OAAO,GAAG,IAAhB;;AAEA,QAAMC,kBAAkB,GAAGC,KAAK,IAAI;AAAE;AACpC9B,IAAAA,SAAS,CAAC8B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD;;AAIA,QAAMC,kBAAkB,GAAGH,KAAK,IAAI;AAAE;AACpC5B,IAAAA,SAAS,CAAC4B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD;;AAIA,QAAME,wBAAwB,GAAGF,KAAK,IAAI;AAAE;AAC1ChC,IAAAA,SAAS,CAACgC,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMG,wBAAwB,GAAGH,KAAK,IAAI;AAAE;AAC1C9B,IAAAA,SAAS,CAAC8B,KAAD,CAAT;AACD,GAFD,CArCkB,CA0ClB;;;AACA,QAAMI,cAAc,GAAG,CAACC,MAAD,EAASP,KAAT,KAAmB;AACxC,QAAIQ,YAAY,GAAG,aAAnB;AACA,QAAIC,WAAW,GAAGT,KAAK,CAACU,GAAxB;AACA,QAAIC,KAAK,GAAG,KAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGJ,YAAY,CAACK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIH,WAAW,KAAKD,YAAY,CAACI,CAAD,CAAhC,EAAqC;AACnCD,QAAAA,KAAK,GAAG,IAAR;AACD;AACF;;AACD,QAAGA,KAAK,KAAK,KAAb,EAAoB;AAClBX,MAAAA,KAAK,CAACc,cAAN;AACA;AACD,KAZuC,CAc1C;;;AACA,QAAIC,YAAY,GAAG,CAAnB;;AACM,QAAIR,MAAM,KAAK,QAAf,EAAyB;AACvBQ,MAAAA,YAAY,GAAGC,QAAQ,CAAC/C,MAAM,GAAGwC,WAAV,CAAvB;;AACA,UAAIM,YAAY,GAAGtB,SAAnB,EAA8B;AAC5BO,QAAAA,KAAK,CAACc,cAAN;AACD;AACF,KALD,MAKO;AACLC,MAAAA,YAAY,GAAG5C,MAAM,GAAGsC,WAAxB;;AACA,UAAIM,YAAY,GAAGpB,SAAnB,EAA8B;AAC5BK,QAAAA,KAAK,CAACc,cAAN;AACD;AACF;AACN,GA3BD,CA3CkB,CAyElB;;;AACA,QAAMG,cAAc,GAAGC,MAAM,IAAI;AAC/B,QAAIA,MAAM,GAAGtB,QAAb,EAAuB;AACjB,aAAO,MAAP;AACL;;AACD,QAAIsB,MAAM,IAAIrB,UAAd,EAA0B;AACxB,aAAO,QAAP;AACD;;AACD,QAAIqB,MAAM,IAAIpB,OAAd,EAAuB;AACrB,aAAO,KAAP;AACD;;AACD,WAAO,QAAP;AACD,GAXD,CA1EkB,CAuFlB;;;AACA,QAAMqB,QAAQ,GAAG,MAAM;AACrB7C,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AAEA,QAAI4C,YAAY,GAAG,EAAnB;AACA,QAAIC,YAAY,GAAG,EAAnB,CALqB,CAOrB;;AACA,QAAG,CAACpD,MAAJ,EAAY;AACVmD,MAAAA,YAAY,GAAG,sBAAf;AACD,KAFD,MAEO,IAAGnD,MAAM,GAAGuB,SAAZ,EAAuB;AAC5B4B,MAAAA,YAAY,GAAG,yBAAf;AACD,KAFM,MAEA,IAAGnD,MAAM,GAAGwB,SAAZ,EAAuB;AAC5B2B,MAAAA,YAAY,GAAG,uBAAf;AACD;;AAED,QAAG,CAACjD,MAAJ,EAAY;AACVkD,MAAAA,YAAY,GAAG,sBAAf;AACD,KAFD,MAEO,IAAGlD,MAAM,GAAGuB,SAAZ,EAAuB;AAC3B2B,MAAAA,YAAY,GAAG,yBAAf;AACF,KAFM,MAEA,IAAGlD,MAAM,GAAGwB,SAAZ,EAAuB;AAC3B0B,MAAAA,YAAY,GAAG,uBAAf;AACF;;AAEF,QAAGD,YAAY,IAAIC,YAAnB,EAAiC;AAC9B/C,MAAAA,YAAY,CAAC8C,YAAD,CAAZ;AACA5C,MAAAA,YAAY,CAAC6C,YAAD,CAAZ;AACA,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GA9BD,CAxFkB,CAwHlB;;;AACA,QAAMC,OAAO,GAAGtB,KAAK,IAAI;AACvB,QAAG,CAACmB,QAAQ,EAAZ,EAAgB;AACd;AACD;;AAGD,QAAII,GAAG,GAAG,CAACpD,MAAM,IAAIF,MAAM,GAAC,GAAP,GAAaA,MAAb,GAAoB,GAAxB,CAAP,EAAqCuD,OAArC,CAA6C,CAA7C,CAAV;AACA,QAAIC,MAAM,GAAG,IAAb;AACA,QAAIC,YAAY,GAAG,EAAnB;;AAGA,YAAQT,cAAc,CAACM,GAAD,CAAtB;AACE,WAAK,MAAL;AAAa;AACXE,UAAAA,MAAM,GAAGtC,WAAW,CAACC,SAArB;AACAsC,UAAAA,YAAY,GAAG,sCAAf;AACA;AACD;;AACD,WAAK,QAAL;AAAe;AACbD,UAAAA,MAAM,GAAGtC,WAAW,CAACE,WAArB;AACAqC,UAAAA,YAAY,GAAG,wBAAf;AACA;AACD;;AACD,WAAK,KAAL;AAAY;AACVD,UAAAA,MAAM,GAAGtC,WAAW,CAACG,QAArB;AACAoC,UAAAA,YAAY,GAAG,+BAAf;AACA;AACD;;AACD,WAAK,QAAL;AAAe;AACbD,UAAAA,MAAM,GAAGtC,WAAW,CAACI,WAArB;AACAmC,UAAAA,YAAY,GAAG,kCAAf;AACA;AACD;;AACD;AAAQ,SAAE;AArBZ,KAXuB,CAmCvB;;;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,MAAM,CAACZ,MAAlC,CAAd;AACA,QAAIkB,SAAS,GAAGN,MAAM,CAACE,OAAD,CAAtB;;AAGA,QAAG1C,WAAW,KAAK8C,SAAnB,EAA8B;AAC1BT,MAAAA,OAAO,CAACtB,KAAD,CAAP;AACA;AACH;;AAEDd,IAAAA,cAAc,CAAC6C,SAAD,CAAd;AACAjD,IAAAA,kBAAkB,CAAC,cAAD,CAAlB;AACAF,IAAAA,UAAU,CAAC8C,YAAD,CAAV;AACAhD,IAAAA,WAAW,CAAC6C,GAAD,CAAX;AACAvC,IAAAA,OAAO,CAAC,gBAAD,CAAP;AACD,GAlDD,CAzHkB,CA8KlB;;;AACA,QAAMgD,KAAK,GAAGhC,KAAK,IAAI;AACrBA,IAAAA,KAAK,CAACc,cAAN;AACA5C,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAE,IAAAA,SAAS,CAAC,CAAD,CAAT;AACAM,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAI,IAAAA,kBAAkB,CAAC,gBAAD,CAAlB;AACAR,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,IAAAA,YAAY,CAAC,EAAD,CAAZ;AACAQ,IAAAA,OAAO,CAAC,cAAD,CAAP;AACD,GATD;;AAWA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADF,CADF,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,eAII;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,GAHP;AAIE,IAAA,WAAW,EAAC,IAJd;AAKE,IAAA,GAAG,EAAEQ,SALP;AAME,IAAA,GAAG,EAAEC,SANP;AAOE,IAAA,KAAK,EAAExB,MAPT;AAQE,IAAA,QAAQ,EAAE8B,kBARZ;AASE,IAAA,UAAU,EAAEO,cAAc,CAAC2B,IAAf,CAAoB,IAApB,EAA0B,QAA1B,CATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,eAgBI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwB5D,SAAxB,CAhBJ,eAmBG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AACI,IAAA,GAAG,EAAEmB,SADT;AAEI,IAAA,GAAG,EAAEC,SAFT;AAGI,IAAA,IAAI,EAAE,CAHV;AAII,IAAA,KAAK,EAAExB,MAJX;AAKI,IAAA,QAAQ,EAAEmC,wBALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAnBH,eA6BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BJ,eA+BI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CA/BJ,eAkCM;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,WAAW,EAAC,IAJd;AAKE,IAAA,GAAG,EAAEV,SALP;AAME,IAAA,GAAG,EAAEC,SANP;AAOE,IAAA,KAAK,EAAExB,MAPT;AAQE,IAAA,QAAQ,EAAEgC,kBARZ;AASE,IAAA,UAAU,EAAEG,cAAc,CAAC2B,IAAf,CAAoB,IAApB,EAA0B,QAA1B,CATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCN,eA8CK;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwB1D,SAAxB,CA9CL,eAgDI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,MAAD;AACG,IAAA,GAAG,EAAEmB,SADR;AAEG,IAAA,GAAG,EAAEC,SAFR;AAGG,IAAA,IAAI,EAAE,GAHT;AAIG,IAAA,KAAK,EAAExB,MAJV;AAKG,IAAA,QAAQ,EAAEkC,wBALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAhDJ,eA0DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1DJ,eA4DI;AAAK,IAAA,EAAE,EAAC,mBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,OAAO,EAAEL,KAAK,IAAI;AAChBA,MAAAA,KAAK,CAACc,cAAN;AACAQ,MAAAA,OAAO;AACR,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVA,eAYE;AACE,IAAA,SAAS,EAAC,QADZ;AAEE,IAAA,OAAO,EAAEU,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZF,CA5DJ,eA+EI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/EJ,CAJJ,eAuFI;AAAK,IAAA,SAAS,EAAEnD,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEI,WAAV;AAAuB,IAAA,GAAG,EAAC,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAsBR,QAAtB,MADF,CAJF,eAOE;AAAK,IAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBE,OAApB,CAPF,CAvFJ,eAiGM;AAAK,IAAA,SAAS,EAAEI,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qGAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,2QAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFF,CAPF,uEADF,CAjGN,CADF,CAiHS;AAjHT;AAmHD,CA7SA;;AAgTL,eAAef,GAAf","sourcesContent":["    import React, {useState} from 'react'\n    import './App.css'\n    import Slider from 'react-rangeslider'\n    import 'react-rangeslider/lib/index.css'\n\n\n     const App = () =>  {\n      let [height, setHeight] = useState(0)\n      let [weight, setWeight] = useState(0)\n      let [heightErr, setHeightErr] = useState(\"\")\n      let [weightErr, setWeightErr] = useState(\"\")\n      let [bmiValue, setBmiValue] = useState(\"\")\n      let [bmiText, setBmiText] = useState(\"\")\n      let [chonkVisibility, setChonkVisibility] = useState(\"invisibleChonk\")\n      let [text, setText] = useState(\"\")\n      let [resultChonk, setResultChonk] = useState(\"visibleChonk\")\n      let AllChonkImg = {\n        slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n          normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/4.jpg\", \"./images/normal/5.jpg\"],\n          fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n          tooFatChonk: [\"./images/2fat/1.jpg\", \"./images/2fat/2.jpg\", \"./images/2fat/3.jpg\", \"./images/2fat/4.jpg\", \"./images/2fat/5.jpg\", \"./images/2fat/6.jpg\"]\n      }\n\n      const minHeight = 95\n      const maxHeight = 220\n      const minWeight = 10\n      const maxWeight = 300\n      const slimThre = 18.5\n      const normalThre = 24.9\n      const fatThre = 29.9\n\n      const handleHeightChange = event => { //spinner\n        setHeight(event.target.value)\n      }\n\n      const handleWeightChange = event => { //spinner\n        setWeight(event.target.value)\n      }\n\n      const handleHeightSliderChange = value => { //range\n        setHeight(value)\n      }\n\n      const handleWeightSliderChange = value => { //range\n        setWeight(value)\n      }\n      \n\n      //limiting input to numbers\n      const handleKeyPress = (source, event) => {\n        let allowedChars = \".0123456789\"\n        let currentChar = event.key\n        let found = false\n        for (let i = 0;  i < allowedChars.length; i++) {\n          if (currentChar === allowedChars[i]) {\n            found = true\n          }\n        }\n        if(found === false) {\n          event.preventDefault()\n          return\n        }\n\n      //limiting number input in height/weight\n      let currentValue = 0   \n            if (source === 'height') {\n              currentValue = parseInt(height + currentChar)\n              if (currentValue > maxHeight) {\n                event.preventDefault()\n              }\n            } else {\n              currentValue = weight + currentChar\n              if (currentValue > maxWeight) {\n                event.preventDefault()\n              }\n            }\n      }\n\n\n      //classifying the results w/images, calculating BMI\n      const classifyResult = result => {\n        if (result < slimThre) {\n              return \"slim\"\n        }\n        if (result <= normalThre) {\n          return \"normal\"\n        }\n        if (result <= fatThre) {\n          return \"fat\"\n        }\n        return \"tooFat\"\n      }\n\n      //height, weight validation and min/max manual input nrs \n      const validate = () => {\n        setHeightErr(\"\")\n        setWeightErr(\"\")\n\n        let heightErrStr = \"\"\n        let weightErrStr = \"\"\n\n        //error messageges for H/W\n        if(!height) {\n          heightErrStr = \"Please, enter height\"\n        } else if(height < minHeight) {\n          heightErrStr = \"Greater than 95, please\"\n        } else if(height > maxHeight) {\n          heightErrStr = \"Less than 220, please\"\n        }\n          \n        if(!weight) {\n          weightErrStr = \"Please, enter weight\"\n        } else if(weight < minWeight) {\n           weightErrStr = \"Greater than 10, please\"\n        } else if(weight > maxWeight) {\n           weightErrStr = \"Less than 300, please\"\n        }\n      \n       if(heightErrStr || weightErrStr) { \n          setHeightErr(heightErrStr)\n          setWeightErr(weightErrStr)\n          return false \n        }\n        return true \n      }\n\n      //calc BMI\n      const calcBmi = event => {\n        if(!validate()) {\n          return \n        }\n\n       \n        let bmi = (weight / (height/100 * height/100)).toFixed(1)\n        let chonks = null\n        let resultString = \"\"\n\n\n        switch (classifyResult(bmi)) {\n          case \"slim\": {\n            chonks = AllChonkImg.slimChonk\n            resultString = \"You're pretty slonky, have a KitKat!\"\n            break\n          }\n          case \"normal\": {\n            chonks = AllChonkImg.normalChonk\n            resultString = \"You're okay...for now.\"\n            break\n          }\n          case \"fat\": {\n            chonks = AllChonkImg.fatChonk\n            resultString = \"You're getting kind of fat...\"\n            break\n          }\n          case \"tooFat\": {\n            chonks = AllChonkImg.tooFatChonk\n            resultString = \"You're quite the chonker, there!\"\n            break\n          }\n          default:{}\n        }\n\n        // getting random images & avoiding duplicates\n        let randNum = Math.floor(Math.random() * chonks.length)\n        let randChonk = chonks[randNum]\n\n\n        if(resultChonk === randChonk) {\n            calcBmi(event)\n            return\n        }\n\n        setResultChonk(randChonk)\n        setChonkVisibility(\"visibleChonk\")  \n        setBmiText(resultString)\n        setBmiValue(bmi) \n        setText(\"invisibleChonk\")\n      }\n\n\n      // clear button\n      const clear = event => {\n        event.preventDefault()\n        setHeight(0)\n        setWeight(0)\n        setBmiValue(\"\")\n        setChonkVisibility(\"invisibleChonk\")\n        setHeightErr(\"\") \n        setWeightErr(\"\")\n        setText(\"visibleChonk\")\n      }\n\n      return ( \n        <div id=\"container\"> \n          <div id=\"title\">\n            <h1>Calculate Your Body Mass Index</h1>\n          </div>\n            <form>\n              <div className=\"unit\">\n                <p>Height (95cm-220cm)</p>\n              </div>\n                <input \n                  type=\"number\" \n                  name=\"height\" \n                  step=\"1\" \n                  placeholder=\"cm\"\n                  min={minHeight} \n                  max={maxHeight} \n                  value={height}\n                  onChange={handleHeightChange}\n                  onKeyPress={handleKeyPress.bind(this, 'height')}\n                />\n               \n                <div className=\"error\">{heightErr}</div>\n               \n\n               <div className=\"slider\">\n                <Slider \n                    min={minHeight} \n                    max={maxHeight} \n                    step={1} \n                    value={height} \n                    onChange={handleHeightSliderChange}\n                /> \n               </div>\n\n                <br />\n              \n                <div className=\"unit\">\n                  <p>Weight (10kg-300kg)</p>\n                </div>\n                  <input \n                    type=\"number\" \n                    name=\"weight\" \n                    step=\"0.5\" \n                    placeholder=\"kg\" \n                    min={minWeight} \n                    max={maxWeight} \n                    value={weight} \n                    onChange={handleWeightChange}\n                    onKeyPress={handleKeyPress.bind(this, 'weight')}\n                 />\n\n                 <div className=\"error\">{weightErr}</div>\n\n                <div className=\"slider\">\n                 <Slider\n                    min={minWeight} \n                    max={maxWeight} \n                    step={0.5} \n                    value={weight} \n                    onChange={handleWeightSliderChange}\n                  />\n                 </div>\n               \n                <br />\n        \n                <div id=\"buttons-container\">\n                  <button \n                    className=\"button\" \n                    onClick={event => {\n                      event.preventDefault()\n                      calcBmi()\n                    }}\n                    >Calculate\n                  </button>\n                  \n                <br />\n\n                  <button \n                    className=\"button\" \n                    onClick={clear}\n                    >Clear\n                  </button>\n                </div>\n\n                <br />\n\n            </form>\n\n            <div className={chonkVisibility}>\n              <div id=\"image\">\n                <img src={resultChonk} alt=\"pictures of cats\" />\n              </div>\n              <div id=\"result-top-text\">\n                <p>Your current BMI: {bmiValue} </p>\n              </div>\n              <div id=\"bmi-text\">{bmiText}</div>\n            </div>\n\n              <div className={text}>\n                <div id=\"text\">\n                  Body mass index, abbreviated BMI, is a key index for relating weight to height. \n                  <br />\n                  <br />\n                  BMI is a person's weight in kilograms (kg) divided by his or her height in meters squared.\n                  The National Institutes of Health (NIH) now defines normal weight, overweight, and obesity according to \n                  BMI rather than the traditional height/weight charts.\n                  <ul>\n                    <li>Overweight is a BMI of 25–29.9</li>\n                    <li>Obesity is a BMI of 30 or more</li>\n                  </ul>\n                  A very muscular person might have a high BMI without health risks.\n                </div>\n              </div>\n        </div> //container\n      ) \n    }\n\n   \nexport default App\n\n\n\n\n     "]},"metadata":{},"sourceType":"module"}