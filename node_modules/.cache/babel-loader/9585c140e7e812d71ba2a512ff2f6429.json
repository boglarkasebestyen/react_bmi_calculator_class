{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/projektek/bmi/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport chonk from './images/default_chonk.jpg';\nimport chonks from './images';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\",\n      defaultChonk: chonk,\n      AllChonkImg: chonks,\n      chonkVisibility: \"invisibleChonk\"\n    };\n    this.calcBmi = this.calcBmi.bind(this);\n    this.calcBmi = this.handleChonk.bind(this);\n  }\n\n  handleHeightChange(event) {\n    this.setState({\n      height: event.target.value\n    });\n  }\n\n  handleWeightChange(event) {\n    this.setState({\n      weight: event.target.value\n    });\n  } //limiting input to numbers\n\n\n  handleKeyPress(source, event) {\n    const allowedChars = \".0123456789\";\n    const currentChar = event.key;\n    let found = false;\n\n    for (let i = 0; i < allowedChars.length; i++) {\n      if (currentChar === allowedChars[i]) {\n        found = true;\n      }\n    }\n\n    if (found === false) {\n      event.preventDefault();\n      return;\n    } //limiting number input /height/weight\n\n\n    let currentValue = 0;\n\n    if (source === 'height') {\n      currentValue = parseInt(this.state.height + currentChar);\n\n      if (currentValue > 220) {\n        event.preventDefault();\n      }\n    } else {\n      currentValue = this.state.weight + currentChar;\n\n      if (currentValue > 300) {\n        event.preventDefault();\n      }\n    }\n  } //calculating BMI and classifying the results\n\n\n  calcBmi(event) {\n    let bmi = (this.state.weight / (this.state.height / 100 * this.state.height / 100)).toFixed(1);\n    this.setState({\n      bmiValue: bmi\n    });\n    if (this.state.bmiValue < 18.5) console.log(this.state.bmiValue);\n    if (this.state.bmiValue >= 18.5 && this.state.bmiValue <= 24.9) console.log(this.state.bmiValue);\n    if (this.state.bmiValue >= 25 && this.state.bmiValue <= 29.9) console.log(this.state.bmiValue);\n    if (this.state.bmiValue >= 30) console.log(this.state.bmiValue);\n  } // clear button\n\n\n  clearBmi(event) {\n    event.preventDefault();\n    this.setState({\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\"\n    });\n  } // fetching images from api\n  // componentDidMount() {\n  //     fetch('https://api.imgflip.com/get_memes')\n  //         .then(response => response.json())\n  //         .then(response => {\n  //             const {memes} = response.data\n  //             this.setState({ AllChonkImg: memes })\n  //         })\n  // }\n  // randomizing the images\n\n\n  handleChonk(event) {\n    const randNum = Math.floor(Math.random() * this.state.AllChonkImg.length);\n    const randChonk = this.state.AllChonkImg[randNum];\n    console.log(randChonk);\n    this.setState({\n      defaultChonk: randChonk\n    });\n    this.setState({\n      chonkVisibility: \"visibleChonk\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, \"BMI Calculator\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      div: \"height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"Height (95cm-220cm)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"height\",\n      step: \"0.1\",\n      placeholder: \"cm\",\n      min: \"95\",\n      max: \"220\",\n      value: this.state.height //kell?\n      ,\n      onChange: this.handleHeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'height'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"weight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 16\n      }\n    }, \"Weight (10kg-300kg)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"weight\",\n      step: \"0.1\",\n      placeholder: \"kg\",\n      min: \"10\",\n      max: \"300\",\n      value: this.state.weight // kell?\n      ,\n      onChange: this.handleWeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'weight'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"calculate\",\n      onClick: event => {\n        event.preventDefault();\n        this.calcBmi();\n        this.handleChonk();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 8\n      }\n    }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"clear\",\n      onClick: this.clearBmi.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"score_one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, \"Result\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"score_two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, \"...\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.chonkVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.defaultChonk,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 5\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sebestyenboglarka/projektek/bmi/src/App.js"],"names":["React","chonk","chonks","App","Component","constructor","state","height","weight","bmiValue","defaultChonk","AllChonkImg","chonkVisibility","calcBmi","bind","handleChonk","handleHeightChange","event","setState","target","value","handleWeightChange","handleKeyPress","source","allowedChars","currentChar","key","found","i","length","preventDefault","currentValue","parseInt","bmi","toFixed","console","log","clearBmi","randNum","Math","floor","random","randChonk","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAKA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXC,MAAAA,QAAQ,EAAE,EAHC;AAIXC,MAAAA,YAAY,EAAET,KAJH;AAKXU,MAAAA,WAAW,EAAET,MALF;AAMXU,MAAAA,eAAe,EAAG;AANP,KAAb;AASA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKD,OAAL,GAAe,KAAKE,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAf;AACD;;AAGDE,EAAAA,kBAAkB,CAACC,KAAD,EAAQ;AACpB,SAAKC,QAAL,CAAc;AAAEX,MAAAA,MAAM,EAAEU,KAAK,CAACE,MAAN,CAAaC;AAAvB,KAAd;AACL;;AAGDC,EAAAA,kBAAkB,CAACJ,KAAD,EAAQ;AACpB,SAAKC,QAAL,CAAc;AAAEV,MAAAA,MAAM,EAAES,KAAK,CAACE,MAAN,CAAaC;AAAvB,KAAd;AACL,GAxB+B,CA0B9B;;;AAEFE,EAAAA,cAAc,CAACC,MAAD,EAASN,KAAT,EAAgB;AAC1B,UAAMO,YAAY,GAAG,aAArB;AACA,UAAMC,WAAW,GAAGR,KAAK,CAACS,GAA1B;AACA,QAAIC,KAAK,GAAG,KAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAiBA,CAAC,GAAGJ,YAAY,CAACK,MAAlC,EAA0CD,CAAC,EAA3C,EAA+C;AAC7C,UAAIH,WAAW,KAAKD,YAAY,CAACI,CAAD,CAAhC,EAAqC;AACnCD,QAAAA,KAAK,GAAG,IAAR;AACD;AACF;;AACD,QAAGA,KAAK,KAAK,KAAb,EAAoB;AAClBV,MAAAA,KAAK,CAACa,cAAN;AACA;AACD,KAZyB,CAc1B;;;AACF,QAAIC,YAAY,GAAG,CAAnB;;AACM,QAAIR,MAAM,KAAK,QAAf,EAAyB;AACvBQ,MAAAA,YAAY,GAAGC,QAAQ,CAAC,KAAK1B,KAAL,CAAWC,MAAX,GAAoBkB,WAArB,CAAvB;;AACA,UAAIM,YAAY,GAAG,GAAnB,EAAwB;AACtBd,QAAAA,KAAK,CAACa,cAAN;AACD;AACF,KALD,MAKO;AACLC,MAAAA,YAAY,GAAG,KAAKzB,KAAL,CAAWE,MAAX,GAAoBiB,WAAnC;;AACA,UAAIM,YAAY,GAAG,GAAnB,EAAwB;AACtBd,QAAAA,KAAK,CAACa,cAAN;AACD;AACF;AAGR,GAzD+B,CA4DhC;;;AAEEjB,EAAAA,OAAO,CAACI,KAAD,EAAQ;AAEb,QAAIgB,GAAG,GAAC,CAAC,KAAK3B,KAAL,CAAWE,MAAX,IAAqB,KAAKF,KAAL,CAAWC,MAAX,GAAkB,GAAlB,GAAwB,KAAKD,KAAL,CAAWC,MAAnC,GAA0C,GAA/D,CAAD,EAAsE2B,OAAtE,CAA8E,CAA9E,CAAR;AACA,SAAKhB,QAAL,CAAc;AAACT,MAAAA,QAAQ,EAAEwB;AAAX,KAAd;AAEA,QAAG,KAAK3B,KAAL,CAAWG,QAAX,GAAsB,IAAzB,EACE0B,OAAO,CAACC,GAAR,CAAY,KAAK9B,KAAL,CAAWG,QAAvB;AACF,QAAG,KAAKH,KAAL,CAAWG,QAAX,IAAuB,IAAvB,IAA+B,KAAKH,KAAL,CAAWG,QAAX,IAAuB,IAAzD,EACE0B,OAAO,CAACC,GAAR,CAAY,KAAK9B,KAAL,CAAWG,QAAvB;AACF,QAAG,KAAKH,KAAL,CAAWG,QAAX,IAAuB,EAAvB,IAA6B,KAAKH,KAAL,CAAWG,QAAX,IAAuB,IAAvD,EACE0B,OAAO,CAACC,GAAR,CAAY,KAAK9B,KAAL,CAAWG,QAAvB;AACF,QAAG,KAAKH,KAAL,CAAWG,QAAX,IAAuB,EAA1B,EACE0B,OAAO,CAACC,GAAR,CAAY,KAAK9B,KAAL,CAAWG,QAAvB;AACH,GA3E6B,CA8E9B;;;AACA4B,EAAAA,QAAQ,CAACpB,KAAD,EAAQ;AACdA,IAAAA,KAAK,CAACa,cAAN;AACA,SAAKZ,QAAL,CAAc;AAACX,MAAAA,MAAM,EAAE,EAAT;AAAaC,MAAAA,MAAM,EAAE,EAArB;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC,KAAd;AACD,GAlF6B,CAsF9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AACAM,EAAAA,WAAW,CAACE,KAAD,EAAQ;AACjB,UAAMqB,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKnC,KAAL,CAAWK,WAAX,CAAuBkB,MAAlD,CAAhB;AACA,UAAMa,SAAS,GAAG,KAAKpC,KAAL,CAAWK,WAAX,CAAuB2B,OAAvB,CAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACA,SAAKxB,QAAL,CAAc;AAAER,MAAAA,YAAY,EAAEgC;AAAhB,KAAd;AACA,SAAKxB,QAAL,CAAc;AAAEN,MAAAA,eAAe,EAAE;AAAnB,KAAd;AACD;;AAIH+B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAS,MAAA,EAAE,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAG,MAAA,GAAG,EAAC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,eAEI;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,WAAW,EAAC,IAJd;AAKE,MAAA,GAAG,EAAC,IALN;AAME,MAAA,GAAG,EAAC,KANN;AAOE,MAAA,KAAK,EAAE,KAAKrC,KAAL,CAAWC,MAPpB,CAO2B;AAP3B;AAQE,MAAA,QAAQ,EAAE,KAAKS,kBAAL,CAAwBF,IAAxB,CAA6B,IAA7B,CARZ;AASE,MAAA,UAAU,EAAE,KAAKQ,cAAL,CAAoBR,IAApB,CAAyB,IAAzB,EAA+B,QAA/B,CATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAeH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfG,eAiBG;AAAG,MAAA,EAAE,EAAC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAjBH,eAkBK;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,WAAW,EAAC,IAJd;AAKE,MAAA,GAAG,EAAC,IALN;AAME,MAAA,GAAG,EAAC,KANN;AAOE,MAAA,KAAK,EAAE,KAAKR,KAAL,CAAWE,MAPpB,CAO4B;AAP5B;AAQE,MAAA,QAAQ,EAAE,KAAKa,kBAAL,CAAwBP,IAAxB,CAA6B,IAA7B,CARZ;AASE,MAAA,UAAU,EAAE,KAAKQ,cAAL,CAAoBR,IAApB,CAAyB,IAAzB,EAA+B,QAA/B,CATd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBL,eA+BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/BI,eAkCL;AACG,MAAA,EAAE,EAAC,WADN;AAEG,MAAA,OAAO,EAAGG,KAAD,IAAW;AAClBA,QAAAA,KAAK,CAACa,cAAN;AACA,aAAKjB,OAAL;AACA,aAAKE,WAAL;AACD,OANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAlCK,eA6CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7CI,eA+CJ;AAAQ,MAAA,EAAE,EAAC,OAAX;AAAmB,MAAA,OAAO,EAAE,KAAKsB,QAAL,CAAcvB,IAAd,CAAmB,IAAnB,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA/CI,eAkDJ;AAAG,MAAA,EAAE,EAAC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDI,eAmDJ;AAAG,MAAA,EAAE,EAAC,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAnDI,CAFJ,eA0DJ;AAAK,MAAA,SAAS,EAAE,KAAKR,KAAL,CAAWM,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,GAAG,EAAE,KAAKN,KAAL,CAAWI,YAArB;AAAmC,MAAA,GAAG,EAAC,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CA1DI,CADF,CADF;AAmEF;;AA/KgC;;AAoLlC,eAAeP,GAAf","sourcesContent":["import React from 'react'   \nimport './App.css'\nimport chonk from './images/default_chonk.jpg'\nimport chonks from './images'\n\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\",\n      defaultChonk: chonk,\n      AllChonkImg: chonks,\n      chonkVisibility : \"invisibleChonk\"\n    }\n\n    this.calcBmi = this.calcBmi.bind(this)\n    this.calcBmi = this.handleChonk.bind(this)\n  }\n\n\n  handleHeightChange(event) {\n        this.setState({ height: event.target.value})\n  }\n\n\n  handleWeightChange(event) {\n        this.setState({ weight: event.target.value})\n  }\n\n    //limiting input to numbers\n\n  handleKeyPress(source, event) {\n      const allowedChars = \".0123456789\"\n      const currentChar = event.key\n      let found = false\n      for (let i = 0;  i < allowedChars.length; i++) {\n        if (currentChar === allowedChars[i]) {\n          found = true\n        }\n      }\n      if(found === false) {\n        event.preventDefault()\n        return\n      }\n\n      //limiting number input /height/weight\n    let currentValue = 0   \n          if (source === 'height') {\n            currentValue = parseInt(this.state.height + currentChar);\n            if (currentValue > 220) {\n              event.preventDefault()\n            }\n          } else {\n            currentValue = this.state.weight + currentChar;\n            if (currentValue > 300) {\n              event.preventDefault()\n            }\n          }\n\n      \n  }\n\n\n  //calculating BMI and classifying the results\n  \n    calcBmi(event) {\n\n      let bmi=(this.state.weight / (this.state.height/100 * this.state.height/100)).toFixed(1)\n      this.setState({bmiValue: bmi}) \n\n      if(this.state.bmiValue < 18.5)\n        console.log(this.state.bmiValue)\n      if(this.state.bmiValue >= 18.5 && this.state.bmiValue <= 24.9) \n        console.log(this.state.bmiValue)\n      if(this.state.bmiValue >= 25 && this.state.bmiValue <= 29.9) \n        console.log(this.state.bmiValue)\n      if(this.state.bmiValue >= 30) \n        console.log(this.state.bmiValue)\n    }\n\n\n    // clear button\n    clearBmi(event) {\n      event.preventDefault()\n      this.setState({height: \"\", weight: \"\", bmiValue: \"\"})\n    }\n\n\n\n    // fetching images from api\n    // componentDidMount() {\n    //     fetch('https://api.imgflip.com/get_memes')\n    //         .then(response => response.json())\n    //         .then(response => {\n    //             const {memes} = response.data\n    //             this.setState({ AllChonkImg: memes })\n    //         })\n    // }\n\n    // randomizing the images\n    handleChonk(event) {\n      const randNum = Math.floor(Math.random() * this.state.AllChonkImg.length)\n      const randChonk = this.state.AllChonkImg[randNum]\n      console.log(randChonk);\n      this.setState({ defaultChonk: randChonk })\n      this.setState({ chonkVisibility: \"visibleChonk\" })\n    }\n   \n\n\n  render() {\n    return ( \n      <main>\n        <section id=\"container\"> \n          <h2>BMI Calculator</h2>\n            <form>\n              <p div=\"height\">Height (95cm-220cm)</p>\n                <input \n                  type=\"number\" \n                  name=\"height\" \n                  step=\"0.1\" \n                  placeholder=\"cm\" \n                  min=\"95\" \n                  max=\"220\"\n                  value={this.state.height}//kell?\n                  onChange={this.handleHeightChange.bind(this)}\n                  onKeyPress={this.handleKeyPress.bind(this, 'height')}\n\n                />\n        \n         <br />\n            \n               <p id=\"weight\">Weight (10kg-300kg)</p>\n                 <input \n                   type=\"number\" \n                   name=\"weight\" \n                   step=\"0.1\" \n                   placeholder=\"kg\" \n                   min=\"10\" \n                   max=\"300\"\n                   value={this.state.weight} // kell?\n                   onChange={this.handleWeightChange.bind(this)}\n                   onKeyPress={this.handleKeyPress.bind(this, 'weight')}\n\n               />\n        \n        <br />\n        \n        \n       <button \n          id=\"calculate\" \n          onClick={(event) => {\n            event.preventDefault()\n            this.calcBmi()\n            this.handleChonk()\n          }}\n          >Calculate\n        </button>\n\n        \n        <br />\n\n        <button id=\"clear\" onClick={this.clearBmi.bind(this)}>Clear</button>\n\n        \n        <p id=\"score_one\">Result</p>\n        <p id=\"score_two\">...</p>\n\n\n\n     </form>\n    <div className={this.state.chonkVisibility}>\n    <img src={this.state.defaultChonk} alt=\"\" />\n    </div>\n     \n    </section>\n   </main>\n  )\n }\n}\n\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}