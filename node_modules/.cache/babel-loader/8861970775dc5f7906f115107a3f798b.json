{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/projektek/bmi/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\n\nconst App = () => {\n  let [height, setHeight] = useState(0);\n  let [weight, setWeight] = useState(0);\n  let [heightErr, setHeightErr] = useState(\"\");\n  let [weightErr, setWeightErr] = useState(\"\");\n  let [bmiValue, setBmiValue] = useState(\"\");\n  let [bmiText, setBmiText] = useState(\"\");\n  let [chonkVisibility, setChonkVisibility] = useState(\"invisibleChonk\");\n  let [resultChonk, setResultChonk] = useState(\"\");\n  let AllChonkImg = {\n    slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n    normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/5.jpg\"],\n    fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n    tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\", \"./images/2chonk/5.jpg\"]\n  };\n  const minHeight = 95;\n  const maxHeight = 220;\n  const minWeight = 10;\n  const maxWeight = 300;\n  const slimThre = 18.5;\n  const normalThre = 24.9;\n  const fatThre = 29.9;\n\n  const handleHeightChange = event => {\n    //spinner\n    setHeight(event.target.value);\n  };\n\n  const handleWeightChange = event => {\n    //spinner\n    setWeight(event.target.value);\n  };\n\n  const handleHeightSliderChange = value => {\n    //range\n    setHeight(value);\n  };\n\n  const handleWeightSliderChange = value => {\n    //range\n    setWeight(value);\n  }; //limiting input to numbers\n\n\n  const handleKeyPress = (source, event) => {\n    let allowedChars = \".0123456789\";\n    let currentChar = event.key;\n    let found = false;\n\n    for (let i = 0; i < allowedChars.length; i++) {\n      if (currentChar === allowedChars[i]) {\n        found = true;\n      }\n    }\n\n    if (found === false) {\n      event.preventDefault();\n      return;\n    } //limiting number input in height/weight\n\n\n    let currentValue = 0;\n\n    if (source === 'height') {\n      currentValue = parseInt(height + currentChar);\n\n      if (currentValue > maxHeight) {\n        event.preventDefault();\n      }\n    } else {\n      currentValue = weight + currentChar;\n\n      if (currentValue > maxWeight) {\n        event.preventDefault();\n      }\n    }\n  }; //classifying the results w/images, calculating BMI\n\n\n  const classifyResult = result => {\n    if (result < slimThre) {\n      return \"slim\";\n    }\n\n    if (result <= normalThre) {\n      return \"normal\";\n    }\n\n    if (result <= fatThre) {\n      return \"fat\";\n    }\n\n    return \"tooFat\";\n  }; //height, weight validation and min/max manual input nrs \n\n\n  const validate = () => {\n    setHeightErr(\"\");\n    setWeightErr(\"\");\n    let heightErrStr = \"\";\n    let weightErrStr = \"\"; //error messageges for H/W\n\n    if (!height) {\n      heightErrStr = \"enter height\";\n    } else if (height < minHeight) {\n      heightErrStr = \"greater than 95\";\n    } else if (height > maxHeight) {\n      heightErrStr = \"less than 220\";\n    }\n\n    if (!weight) {\n      weightErrStr = \"enter weight\";\n    } else if (weight < minWeight) {\n      weightErrStr = \"greater than 10\";\n    } else if (weight > maxWeight) {\n      weightErrStr = \"less than 300\";\n    }\n\n    if (heightErrStr || weightErrStr) {\n      setHeightErr(heightErrStr);\n      setWeightErr(weightErrStr);\n      return false;\n    }\n\n    return true;\n  };\n\n  const calcBmi = event => {\n    if (!validate()) {\n      return;\n    }\n\n    let bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    let chonks = null;\n    let resultString = \"\";\n\n    switch (classifyResult(bmi)) {\n      case \"slim\":\n        {\n          chonks = AllChonkImg.slimChonk;\n          resultString = \"You're pretty slonky, have a burger\";\n          break;\n        }\n\n      case \"normal\":\n        {\n          chonks = AllChonkImg.normalChonk;\n          resultString = \"You're okay...for now\";\n          break;\n        }\n\n      case \"fat\":\n        {\n          chonks = AllChonkImg.fatChonk;\n          resultString = \"You're getting kind of fat\";\n          break;\n        }\n\n      case \"tooFat\":\n        {\n          chonks = AllChonkImg.tooFatChonk;\n          resultString = \"You're quite the chonker, there\";\n          break;\n        }\n    } // getting the random images and avoiding duplicates\n\n\n    let randNum = Math.floor(Math.random() * chonks.length);\n    let randChonk = chonks[randNum];\n\n    if (resultChonk === randChonk) {\n      calcBmi(event);\n      return;\n    }\n\n    setResultChonk(randChonk);\n    setChonkVisibility(\"visibleChonk\");\n    setBmiText(resultString);\n    setBmiValue(bmi);\n  }; // clear button\n\n\n  const clear = event => {\n    event.preventDefault();\n    setHeight(0);\n    setWeight(0);\n    setBmiValue(\"\");\n    setChonkVisibility(\"invisibleChonk\");\n    setHeightErr(\"\");\n    setWeightErr(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 11\n    }\n  }, \"BMI Calculator\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Height (95cm-220cm)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"height\",\n    step: \"0.5\",\n    min: minHeight,\n    max: maxHeight,\n    value: height,\n    onChange: handleHeightChange,\n    onKeyPress: handleKeyPress.bind(this, 'height'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, heightErr), /*#__PURE__*/React.createElement(Slider, {\n    className: \"slider\",\n    min: minHeight,\n    max: maxHeight,\n    step: 0.5,\n    value: height,\n    onChange: handleHeightSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 17\n    }\n  }, \"Weight (10kg-300kg)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"weight\",\n    step: \"0.5\",\n    placeholder: \"kg\",\n    min: minWeight,\n    max: maxWeight,\n    value: weight,\n    onChange: handleWeightChange,\n    onKeyPress: handleKeyPress.bind(this, 'weight'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, weightErr), /*#__PURE__*/React.createElement(Slider, {\n    className: \"slider\",\n    min: minWeight,\n    max: maxWeight,\n    step: 0.5,\n    value: weight,\n    onChange: handleWeightSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: event => {\n      event.preventDefault();\n      calcBmi();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 16\n    }\n  }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, \"Clear\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: chonkVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: resultChonk,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"result-top-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, \"Your BMI result is \", bmiValue), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"bmi-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, bmiText))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sebestyenboglarka/projektek/bmi/src/App.js"],"names":["React","useState","Slider","App","height","setHeight","weight","setWeight","heightErr","setHeightErr","weightErr","setWeightErr","bmiValue","setBmiValue","bmiText","setBmiText","chonkVisibility","setChonkVisibility","resultChonk","setResultChonk","AllChonkImg","slimChonk","normalChonk","fatChonk","tooFatChonk","minHeight","maxHeight","minWeight","maxWeight","slimThre","normalThre","fatThre","handleHeightChange","event","target","value","handleWeightChange","handleHeightSliderChange","handleWeightSliderChange","handleKeyPress","source","allowedChars","currentChar","key","found","i","length","preventDefault","currentValue","parseInt","classifyResult","result","validate","heightErrStr","weightErrStr","calcBmi","bmi","toFixed","chonks","resultString","randNum","Math","floor","random","randChonk","clear","bind"],"mappings":"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","sourcesContent":["  import React, {useState} from 'react'\n  import './App.css'\n  import Slider from 'react-rangeslider'\n  import 'react-rangeslider/lib/index.css'\n\n\n   const App = () =>  {\n    let [height, setHeight] = useState(0)\n    let [weight, setWeight] = useState(0)\n    let [heightErr, setHeightErr] = useState(\"\")\n    let [weightErr, setWeightErr] = useState(\"\")\n    let [bmiValue, setBmiValue] = useState(\"\")\n    let [bmiText, setBmiText] = useState(\"\")\n    let [chonkVisibility, setChonkVisibility] = useState(\"invisibleChonk\")\n    let [resultChonk, setResultChonk] = useState(\"\")\n    let AllChonkImg = {\n      slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n      normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/5.jpg\"],\n      fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n      tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\", \"./images/2chonk/5.jpg\"]\n    }\n\n    const minHeight = 95\n    const maxHeight = 220\n    const minWeight = 10\n    const maxWeight = 300\n    const slimThre = 18.5\n    const normalThre = 24.9\n    const fatThre = 29.9\n\n    const handleHeightChange = event => { //spinner\n      setHeight(event.target.value)\n    }\n\n    const handleWeightChange = event => { //spinner\n      setWeight(event.target.value)\n    }\n\n    const handleHeightSliderChange = value => { //range\n      setHeight(value)\n    }\n\n    const handleWeightSliderChange = value => { //range\n      setWeight(value)\n    }\n    \n\n    //limiting input to numbers\n    const handleKeyPress = (source, event) => {\n        let allowedChars = \".0123456789\"\n        let currentChar = event.key\n        let found = false\n        for (let i = 0;  i < allowedChars.length; i++) {\n          if (currentChar === allowedChars[i]) {\n            found = true\n          }\n        }\n        if(found === false) {\n          event.preventDefault()\n          return\n        }\n\n      //limiting number input in height/weight\n      let currentValue = 0   \n            if (source === 'height') {\n              currentValue = parseInt(height + currentChar)\n              if (currentValue > maxHeight) {\n                event.preventDefault()\n              }\n            } else {\n              currentValue = weight + currentChar\n              if (currentValue > maxWeight) {\n                event.preventDefault()\n              }\n            }\n    }\n\n\n    //classifying the results w/images, calculating BMI\n    const classifyResult = result => {\n        if (result < slimThre) {\n            return \"slim\"\n        }\n        if (result <= normalThre) {\n          return \"normal\"\n        }\n        if (result <= fatThre) {\n          return \"fat\"\n        }\n        return \"tooFat\"\n    }\n\n    //height, weight validation and min/max manual input nrs \n    const validate = () => {\n      setHeightErr(\"\")\n      setWeightErr(\"\")\n\n      let heightErrStr = \"\"\n      let weightErrStr = \"\"\n\n      //error messageges for H/W\n      if(!height) {\n        heightErrStr = \"enter height\"\n      } else if(height < minHeight) {\n        heightErrStr = \"greater than 95\"\n      } else if(height > maxHeight) {\n        heightErrStr = \"less than 220\"\n      }\n        \n      if(!weight) {\n        weightErrStr = \"enter weight\"\n      } else if(weight < minWeight) {\n         weightErrStr = \"greater than 10\"\n      } else if(weight > maxWeight) {\n         weightErrStr = \"less than 300\"\n      }\n    \n     if(heightErrStr || weightErrStr) { \n        setHeightErr(heightErrStr)\n        setWeightErr(weightErrStr)\n        return false \n      }\n      return true \n    }\n\n\n    const calcBmi = event => {\n      if(!validate()) {\n        return \n      }\n\n     \n      let bmi = (weight / (height/100 * height/100)).toFixed(1)\n      let chonks = null\n      let resultString = \"\"\n\n\n      switch (classifyResult(bmi)) {\n        case \"slim\": {\n          chonks = AllChonkImg.slimChonk\n          resultString = \"You're pretty slonky, have a burger\"\n          break\n        }\n        case \"normal\": {\n          chonks = AllChonkImg.normalChonk\n          resultString = \"You're okay...for now\"\n          break\n        }\n        case \"fat\": {\n          chonks = AllChonkImg.fatChonk\n          resultString = \"You're getting kind of fat\"\n          break\n        }\n        case \"tooFat\": {\n          chonks = AllChonkImg.tooFatChonk\n          resultString = \"You're quite the chonker, there\"\n          break\n        }\n      }\n\n      // getting the random images and avoiding duplicates\n      let randNum = Math.floor(Math.random() * chonks.length)\n      let randChonk = chonks[randNum]\n\n\n      if(resultChonk === randChonk) {\n          calcBmi(event)\n          return\n      }\n\n      setResultChonk(randChonk)\n      setChonkVisibility(\"visibleChonk\")  \n      setBmiText(resultString)\n      setBmiValue(bmi) \n    }\n\n\n    // clear button\n    const clear = event => {\n      event.preventDefault()\n      setHeight(0)\n      setWeight(0)\n      setBmiValue(\"\")\n      setChonkVisibility(\"invisibleChonk\")\n      setHeightErr(\"\") \n      setWeightErr(\"\")\n    }\n\n    return ( \n      <main>\n        <section id=\"container\"> \n          <h2>BMI Calculator</h2>\n            <form>\n              <div className=\"unit\">Height (95cm-220cm)</div>\n                <input \n                  type=\"number\" \n                  name=\"height\" \n                  step=\"0.5\" \n                  min={minHeight} \n                  max={maxHeight} \n                  value={height}\n                  onChange={handleHeightChange}\n                  onKeyPress={handleKeyPress.bind(this, 'height')}\n                />\n                <div className=\"error\">{heightErr}</div>\n                <Slider \n                  className=\"slider\"\n                  min={minHeight} \n                  max={maxHeight} \n                  step={0.5} \n                  value={height} \n                  onChange={handleHeightSliderChange}\n                />                \n\n        \n                <br />\n            \n                <div className=\"unit\">Weight (10kg-300kg)</div>\n                  <input \n                    type=\"number\" \n                    name=\"weight\" \n                    step=\"0.5\" \n                    placeholder=\"kg\" \n                    min={minWeight} \n                    max={maxWeight} \n                    value={weight} \n                    onChange={handleWeightChange}\n                    onKeyPress={handleKeyPress.bind(this, 'weight')}\n                 />\n                <div className=\"error\">{weightErr}</div>\n                <Slider\n                  className=\"slider\"\n                  min={minWeight} \n                  max={maxWeight} \n                  step={0.5} \n                  value={weight} \n                  onChange={handleWeightSliderChange}\n                />\n\n               \n                <br />\n        \n              <div id=\"buttons-container\">\n               <button \n                  className=\"button\" \n                  onClick={event => {\n                    event.preventDefault()\n                    calcBmi()\n                  }}\n                  >Calculate\n                </button>\n                \n                <br />\n\n                <button className=\"button\" onClick={clear}>Clear</button>\n              </div>\n\n                <br />\n\n            </form>\n              <div className={chonkVisibility}>\n                <img src={resultChonk} alt=\"\" />\n                <h2 className=\"result-top-text\">Your BMI result is {bmiValue}</h2>\n                <h2 className=\"bmi-text\">{bmiText}</h2>\n              </div>\n          </section>\n      </main>\n    )\n  }\n   \n  export default App\n\n\n\n\n   "]},"metadata":{},"sourceType":"module"}