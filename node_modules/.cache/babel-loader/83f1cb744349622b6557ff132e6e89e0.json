{"ast":null,"code":"import React, { useRef, useState, useCallback, useEffect, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useId } from '@reach/auto-id';\nimport { forwardRefWithAs, useControlledSwitchWarning, warning, useForkedRef, useControlledState, useIsomorphicLayoutEffect, useEventCallback, noop, getOwnerDocument, wrapEvent, checkStyles, isFunction, makeId, memoWithAs, createNamedContext } from '@reach/utils';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar SliderOrientation;\n\n(function (SliderOrientation) {\n  SliderOrientation[\"Horizontal\"] = \"horizontal\";\n  SliderOrientation[\"Vertical\"] = \"vertical\"; // TODO: Add support for RTL slider\n})(SliderOrientation || (SliderOrientation = {})); // TODO: Remove in 1.0\n\n\nvar SliderHandleAlignment;\n\n(function (SliderHandleAlignment) {\n  // Handle is centered directly over the current value marker\n  SliderHandleAlignment[\"Center\"] = \"center\"; // Handle is contained within the bounds of the track, offset slightly from\n  // the value's center mark to accommodate\n\n  SliderHandleAlignment[\"Contain\"] = \"contain\";\n})(SliderHandleAlignment || (SliderHandleAlignment = {})); // TODO: Remove in 1.0\n\n\nvar SLIDER_ORIENTATION_HORIZONTAL = SliderOrientation.Horizontal;\nvar SLIDER_ORIENTATION_VERTICAL = SliderOrientation.Vertical;\nvar SLIDER_HANDLE_ALIGN_CENTER = SliderHandleAlignment.Center;\nvar SLIDER_HANDLE_ALIGN_CONTAIN = SliderHandleAlignment.Contain;\nvar SliderContext = /*#__PURE__*/createNamedContext(\"SliderContext\", {});\n\nvar useSliderContext = function useSliderContext() {\n  return useContext(SliderContext);\n}; // These proptypes are shared between the composed SliderInput component and the\n// simplified Slider\n\n\nvar sliderPropTypes = {\n  defaultValue: PropTypes.number,\n  disabled: PropTypes.bool,\n  getAriaLabel: PropTypes.func,\n  getAriaValueText: PropTypes.func,\n  getValueText: PropTypes.func,\n  handleAlignment: /*#__PURE__*/PropTypes.oneOf([SliderHandleAlignment.Center, SliderHandleAlignment.Contain]),\n  min: PropTypes.number,\n  max: PropTypes.number,\n  name: PropTypes.string,\n  orientation: /*#__PURE__*/PropTypes.oneOf([SliderOrientation.Horizontal, SliderOrientation.Vertical]),\n  onChange: PropTypes.func,\n  step: PropTypes.number,\n  value: PropTypes.number\n}; ////////////////////////////////////////////////////////////////////////////////\n\n/**\r\n * Slider\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/slider#slider\r\n */\n\nvar Slider = /*#__PURE__*/forwardRefWithAs(function Slider(_ref, forwardedRef) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  return React.createElement(SliderInput, Object.assign({}, props, {\n    ref: forwardedRef,\n    \"data-reach-slider\": \"\",\n    _componentName: \"Slider\"\n  }), React.createElement(SliderTrack, null, React.createElement(SliderTrackHighlight, null), React.createElement(SliderHandle, null), children));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  Slider.displayName = \"Slider\";\n  Slider.propTypes = /*#__PURE__*/_extends({}, sliderPropTypes, {\n    children: PropTypes.node\n  });\n}\n/**\r\n * SliderInput\r\n *\r\n * The parent component of the slider interface. This is a lower level component\r\n * if you need more control over styles or rendering the slider's inner\r\n * components.\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderinput\r\n */\n\n\nvar SliderInput = /*#__PURE__*/forwardRefWithAs(function SliderInput(_ref2, forwardedRef) {\n  var ariaLabel = _ref2[\"aria-label\"],\n      ariaLabelledBy = _ref2[\"aria-labelledby\"],\n      ariaValueTextProp = _ref2[\"aria-valuetext\"],\n      _ref2$as = _ref2.as,\n      Comp = _ref2$as === void 0 ? \"div\" : _ref2$as,\n      defaultValue = _ref2.defaultValue,\n      _ref2$disabled = _ref2.disabled,\n      disabled = _ref2$disabled === void 0 ? false : _ref2$disabled,\n      controlledValue = _ref2.value,\n      getAriaLabel = _ref2.getAriaLabel,\n      getAriaValueText = _ref2.getAriaValueText,\n      DEPRECATED_getValueText = _ref2.getValueText,\n      _ref2$handleAlignment = _ref2.handleAlignment,\n      handleAlignment = _ref2$handleAlignment === void 0 ? SliderHandleAlignment.Center : _ref2$handleAlignment,\n      _ref2$max = _ref2.max,\n      max = _ref2$max === void 0 ? 100 : _ref2$max,\n      _ref2$min = _ref2.min,\n      min = _ref2$min === void 0 ? 0 : _ref2$min,\n      name = _ref2.name,\n      onChange = _ref2.onChange,\n      onKeyDown = _ref2.onKeyDown,\n      onMouseDown = _ref2.onMouseDown,\n      onMouseMove = _ref2.onMouseMove,\n      onMouseUp = _ref2.onMouseUp,\n      onPointerDown = _ref2.onPointerDown,\n      onPointerUp = _ref2.onPointerUp,\n      onTouchEnd = _ref2.onTouchEnd,\n      onTouchMove = _ref2.onTouchMove,\n      onTouchStart = _ref2.onTouchStart,\n      _ref2$orientation = _ref2.orientation,\n      orientation = _ref2$orientation === void 0 ? SliderOrientation.Horizontal : _ref2$orientation,\n      _ref2$step = _ref2.step,\n      step = _ref2$step === void 0 ? 1 : _ref2$step,\n      children = _ref2.children,\n      _ref2$_componentName = _ref2._componentName,\n      _componentName = _ref2$_componentName === void 0 ? \"SliderInput\" : _ref2$_componentName,\n      rest = _objectWithoutPropertiesLoose(_ref2, [\"aria-label\", \"aria-labelledby\", \"aria-valuetext\", \"as\", \"defaultValue\", \"disabled\", \"value\", \"getAriaLabel\", \"getAriaValueText\", \"getValueText\", \"handleAlignment\", \"max\", \"min\", \"name\", \"onChange\", \"onKeyDown\", \"onMouseDown\", \"onMouseMove\", \"onMouseUp\", \"onPointerDown\", \"onPointerUp\", \"onTouchEnd\", \"onTouchMove\", \"onTouchStart\", \"orientation\", \"step\", \"children\", \"_componentName\"]);\n\n  useControlledSwitchWarning(controlledValue, \"value\", _componentName);\n  process.env.NODE_ENV !== \"production\" ? warning(!DEPRECATED_getValueText, \"The `getValueText` prop in @reach/slider is deprecated. Please use `getAriaValueText` instead.\") : void 0;\n  var touchId = useRef();\n  var id = useId(rest.id); // Track whether or not the pointer is down without updating the component\n\n  var pointerDownRef = useRef(false);\n  var trackRef = useRef(null);\n  var handleRef = useRef(null);\n  var sliderRef = useRef(null);\n  var ref = useForkedRef(sliderRef, forwardedRef);\n\n  var _useState = useState(false),\n      hasFocus = _useState[0],\n      setHasFocus = _useState[1];\n\n  var _useDimensions = useDimensions(handleRef),\n      handleDimensions = _objectWithoutPropertiesLoose(_useDimensions, [\"ref\"]);\n\n  var _useControlledState = useControlledState(controlledValue, defaultValue || min),\n      _value = _useControlledState[0],\n      setValue = _useControlledState[1];\n\n  var value = clamp(_value, min, max);\n  var trackPercent = valueToPercent(value, min, max);\n  var isVertical = orientation === SliderOrientation.Vertical;\n  var handleSize = isVertical ? handleDimensions.height : handleDimensions.width; // TODO: Consider removing the `handleAlignment` prop\n  // We may want to use accept a `handlePosition` prop instead and let apps\n  // define their own positioning logic, similar to how we do for popovers.\n\n  var handlePosition = \"calc(\" + trackPercent + \"% - \" + (handleAlignment === SliderHandleAlignment.Center ? handleSize + \"px / 2\" : handleSize + \"px * \" + trackPercent * 0.01) + \")\";\n  var handlePositionRef = useRef(handlePosition);\n  useIsomorphicLayoutEffect(function () {\n    handlePositionRef.current = handlePosition;\n  }, [handlePosition]);\n  var onChangeRef = useRef(onChange);\n  useIsomorphicLayoutEffect(function () {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n  var updateValue = useCallback(function updateValue(newValue) {\n    setValue(newValue);\n\n    if (onChangeRef.current) {\n      // Prevent onChange from recreating the function\n      // TODO: Reonsider the onChange callback API\n      onChangeRef.current(newValue, {\n        min: min,\n        max: max,\n        // Prevent handlePosition from recreating the function\n        handlePosition: handlePositionRef.current\n      });\n    }\n  }, [max, min, setValue]);\n  var getNewValueFromEvent = useCallback(function (event) {\n    return getNewValue(getPointerPosition(event, touchId), trackRef.current, {\n      step: step,\n      orientation: orientation,\n      min: min,\n      max: max\n    });\n  }, [max, min, orientation, step]); // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_kbd_interaction\n\n  var handleKeyDown = useEventCallback(function (event) {\n    if (disabled) {\n      return;\n    }\n\n    var newValue;\n    var tenSteps = (max - min) / 10;\n    var keyStep = step || (max - min) / 100;\n\n    switch (event.key) {\n      // Decrease the value of the slider by one step.\n      case \"ArrowLeft\":\n      case \"ArrowDown\":\n        newValue = value - keyStep;\n        break;\n      // Increase the value of the slider by one step\n\n      case \"ArrowRight\":\n      case \"ArrowUp\":\n        newValue = value + keyStep;\n        break;\n      // Decrement the slider by an amount larger than the step change made by\n      // `ArrowDown`.\n\n      case \"PageDown\":\n        newValue = value - tenSteps;\n        break;\n      // Increment the slider by an amount larger than the step change made by\n      // `ArrowUp`.\n\n      case \"PageUp\":\n        newValue = value + tenSteps;\n        break;\n      // Set the slider to the first allowed value in its range.\n\n      case \"Home\":\n        newValue = min;\n        break;\n      // Set the slider to the last allowed value in its range.\n\n      case \"End\":\n        newValue = max;\n        break;\n\n      default:\n        return;\n    }\n\n    event.preventDefault();\n    newValue = clamp(step ? roundValueToStep(newValue, step, min) : newValue, min, max);\n    updateValue(newValue);\n  });\n  var ariaValueText = DEPRECATED_getValueText ? DEPRECATED_getValueText(value) : getAriaValueText ? getAriaValueText(value) : ariaValueTextProp;\n  var trackHighlightStyle = isVertical ? {\n    width: \"100%\",\n    height: trackPercent + \"%\",\n    bottom: 0\n  } : {\n    width: trackPercent + \"%\",\n    height: \"100%\",\n    left: 0\n  };\n  var ctx = {\n    ariaLabel: getAriaLabel ? getAriaLabel(value) : ariaLabel,\n    ariaLabelledBy: ariaLabelledBy,\n    ariaValueText: ariaValueText,\n    handleDimensions: handleDimensions,\n    handleKeyDown: handleKeyDown,\n    handlePosition: handlePosition,\n    handleRef: handleRef,\n    hasFocus: hasFocus,\n    onKeyDown: onKeyDown,\n    setHasFocus: setHasFocus,\n    sliderId: id,\n    sliderMax: max,\n    sliderMin: min,\n    value: value,\n    disabled: !!disabled,\n    isVertical: isVertical,\n    orientation: orientation,\n    trackPercent: trackPercent,\n    trackRef: trackRef,\n    trackHighlightStyle: trackHighlightStyle,\n    updateValue: updateValue\n  }; // Slide events!\n  // We will try to use pointer events if they are supported to leverage\n  // setPointerCapture and releasePointerCapture. We'll fall back to separate\n  // mouse and touch events.\n  // TODO: This could be more concise\n\n  var removeMoveEvents = useRef(noop);\n  var removeStartEvents = useRef(noop);\n  var removeEndEvents = useRef(noop); // Store our event handlers in refs so we aren't attaching/detaching events\n  // on every render if the user doesn't useCallback\n\n  var appEvents = useRef({\n    onMouseMove: onMouseMove,\n    onMouseDown: onMouseDown,\n    onMouseUp: onMouseUp,\n    onTouchStart: onTouchStart,\n    onTouchEnd: onTouchEnd,\n    onTouchMove: onTouchMove,\n    onPointerDown: onPointerDown,\n    onPointerUp: onPointerUp\n  });\n  useIsomorphicLayoutEffect(function () {\n    appEvents.current.onMouseMove = onMouseMove;\n    appEvents.current.onMouseDown = onMouseDown;\n    appEvents.current.onMouseUp = onMouseUp;\n    appEvents.current.onTouchStart = onTouchStart;\n    appEvents.current.onTouchEnd = onTouchEnd;\n    appEvents.current.onTouchMove = onTouchMove;\n    appEvents.current.onPointerDown = onPointerDown;\n    appEvents.current.onPointerUp = onPointerUp;\n  }, [onMouseMove, onMouseDown, onMouseUp, onTouchStart, onTouchEnd, onTouchMove, onPointerDown, onPointerUp]);\n  var handleSlideStart = useEventCallback(function (event) {\n    var _handleRef$current;\n\n    if (disabled) {\n      pointerDownRef.current = false;\n      return;\n    }\n\n    pointerDownRef.current = true;\n\n    if (event.changedTouches) {\n      var _event$changedTouches; // Prevent scrolling for touch events\n\n\n      event.preventDefault();\n      var touch = (_event$changedTouches = event.changedTouches) === null || _event$changedTouches === void 0 ? void 0 : _event$changedTouches[0];\n\n      if (touch != null) {\n        touchId.current = touch.identifier;\n      }\n    }\n\n    var newValue = getNewValueFromEvent(event);\n\n    if (newValue == null) {\n      return;\n    }\n\n    (_handleRef$current = handleRef.current) === null || _handleRef$current === void 0 ? void 0 : _handleRef$current.focus();\n    updateValue(newValue);\n    removeMoveEvents.current = addMoveListener();\n    removeEndEvents.current = addEndListener();\n  });\n  var setPointerCapture = useEventCallback(function (event) {\n    var _sliderRef$current;\n\n    if (disabled) {\n      pointerDownRef.current = false;\n      return;\n    }\n\n    pointerDownRef.current = true;\n    (_sliderRef$current = sliderRef.current) === null || _sliderRef$current === void 0 ? void 0 : _sliderRef$current.setPointerCapture(event.pointerId);\n  });\n  var releasePointerCapture = useEventCallback(function (event) {\n    var _sliderRef$current2;\n\n    (_sliderRef$current2 = sliderRef.current) === null || _sliderRef$current2 === void 0 ? void 0 : _sliderRef$current2.releasePointerCapture(event.pointerId);\n    pointerDownRef.current = false;\n  });\n  var handlePointerMove = useEventCallback(function (event) {\n    if (disabled || !pointerDownRef.current) {\n      pointerDownRef.current = false;\n      return;\n    }\n\n    var newValue = getNewValueFromEvent(event);\n\n    if (newValue == null) {\n      return;\n    }\n\n    updateValue(newValue);\n  });\n  var handleSlideStop = useEventCallback(function (event) {\n    pointerDownRef.current = false;\n    var newValue = getNewValueFromEvent(event);\n\n    if (newValue == null) {\n      return;\n    }\n\n    touchId.current = undefined;\n    removeMoveEvents.current();\n    removeEndEvents.current();\n  });\n  var addMoveListener = useCallback(function () {\n    var ownerDocument = getOwnerDocument(sliderRef.current) || document;\n    var touchListener = wrapEvent(appEvents.current.onTouchMove, handlePointerMove);\n    var mouseListener = wrapEvent(appEvents.current.onMouseMove, handlePointerMove);\n    ownerDocument.addEventListener(\"touchmove\", touchListener);\n    ownerDocument.addEventListener(\"mousemove\", mouseListener);\n    return function () {\n      ownerDocument.removeEventListener(\"touchmove\", touchListener);\n      ownerDocument.removeEventListener(\"mousemove\", mouseListener);\n    };\n  }, [handlePointerMove]);\n  var addEndListener = useCallback(function () {\n    var ownerDocument = getOwnerDocument(sliderRef.current) || document;\n    var pointerListener = wrapEvent(appEvents.current.onPointerUp, releasePointerCapture);\n    var touchListener = wrapEvent(appEvents.current.onTouchEnd, handleSlideStop);\n    var mouseListener = wrapEvent(appEvents.current.onMouseUp, handleSlideStop);\n\n    if (\"PointerEvent\" in window) {\n      ownerDocument.addEventListener(\"pointerup\", pointerListener);\n    }\n\n    ownerDocument.addEventListener(\"touchend\", touchListener);\n    ownerDocument.addEventListener(\"mouseup\", mouseListener);\n    return function () {\n      if (\"PointerEvent\" in window) {\n        ownerDocument.removeEventListener(\"pointerup\", pointerListener);\n      }\n\n      ownerDocument.removeEventListener(\"touchend\", touchListener);\n      ownerDocument.removeEventListener(\"mouseup\", mouseListener);\n    };\n  }, [handleSlideStop, releasePointerCapture]);\n  var addStartListener = useCallback(function () {\n    var touchListener = wrapEvent(appEvents.current.onTouchStart, handleSlideStart);\n    var mouseListener = wrapEvent(appEvents.current.onMouseDown, handleSlideStart);\n    var pointerListener = wrapEvent(appEvents.current.onPointerDown, setPointerCapture); // e.preventDefault is ignored by React's synthetic touchStart event, so\n    // we attach the listener directly to the DOM node\n    // https://github.com/facebook/react/issues/9809#issuecomment-413978405\n\n    sliderRef.current.addEventListener(\"touchstart\", touchListener);\n    sliderRef.current.addEventListener(\"mousedown\", mouseListener);\n\n    if (\"PointerEvent\" in window) {\n      sliderRef.current.addEventListener(\"pointerdown\", pointerListener);\n    }\n\n    return function () {\n      sliderRef.current.removeEventListener(\"touchstart\", touchListener);\n      sliderRef.current.removeEventListener(\"mousedown\", mouseListener);\n\n      if (\"PointerEvent\" in window) {\n        sliderRef.current.removeEventListener(\"pointerdown\", pointerListener);\n      }\n    };\n  }, [setPointerCapture, handleSlideStart]);\n  useEffect(function () {\n    removeStartEvents.current = addStartListener();\n    return function () {\n      removeStartEvents.current();\n      removeEndEvents.current();\n      removeMoveEvents.current();\n    };\n  }, [addStartListener]);\n  useEffect(function () {\n    return checkStyles(\"slider\");\n  }, []);\n  return React.createElement(SliderContext.Provider, {\n    value: ctx\n  }, React.createElement(Comp, Object.assign({}, rest, {\n    ref: ref,\n    \"data-reach-slider-input\": \"\",\n    \"data-disabled\": disabled ? \"\" : undefined,\n    \"data-orientation\": orientation,\n    tabIndex: -1\n  }), isFunction(children) ? children({\n    hasFocus: hasFocus,\n    id: id,\n    max: max,\n    min: min,\n    value: value,\n    ariaValueText: ariaValueText,\n    valueText: ariaValueText\n  }) : children, name && // If the slider is used in a form we'll need an input field to\n  // capture the value. We'll assume this when the component is given a\n  // form field name (A `name` prop doesn't really make sense in any\n  // other context).\n  React.createElement(\"input\", {\n    type: \"hidden\",\n    value: value,\n    name: name,\n    id: id && makeId(\"input\", id)\n  })));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  SliderInput.displayName = \"SliderInput\";\n  SliderInput.propTypes = /*#__PURE__*/_extends({}, sliderPropTypes, {\n    children: /*#__PURE__*/PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired\n  });\n}\n/**\r\n * SliderTrack\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrack\r\n */\n\n\nvar SliderTrackImpl = /*#__PURE__*/forwardRefWithAs(function SliderTrack(_ref3, forwardedRef) {\n  var _ref3$as = _ref3.as,\n      Comp = _ref3$as === void 0 ? \"div\" : _ref3$as,\n      children = _ref3.children,\n      _ref3$style = _ref3.style,\n      style = _ref3$style === void 0 ? {} : _ref3$style,\n      props = _objectWithoutPropertiesLoose(_ref3, [\"as\", \"children\", \"style\"]);\n\n  var _useSliderContext = useSliderContext(),\n      disabled = _useSliderContext.disabled,\n      orientation = _useSliderContext.orientation,\n      trackRef = _useSliderContext.trackRef;\n\n  var ref = useForkedRef(trackRef, forwardedRef);\n  return React.createElement(Comp, Object.assign({\n    ref: ref,\n    style: _extends({}, style, {\n      position: \"relative\"\n    })\n  }, props, {\n    \"data-reach-slider-track\": \"\",\n    \"data-disabled\": disabled ? \"\" : undefined,\n    \"data-orientation\": orientation\n  }), children);\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  SliderTrackImpl.displayName = \"SliderTrack\";\n  SliderTrackImpl.propTypes = {\n    children: PropTypes.node.isRequired\n  };\n}\n\nvar SliderTrack = /*#__PURE__*/memoWithAs(SliderTrackImpl);\n\nif (process.env.NODE_ENV !== \"production\") {\n  SliderTrack.displayName = \"SliderTrack\";\n}\n/**\r\n * SliderTrackHighlight\r\n *\r\n * The (typically) highlighted portion of the track that represents the space\r\n * between the slider's `min` value and its current value.\r\n *\r\n * TODO: Consider renaming to `SliderTrackProgress`\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrackhighlight\r\n */\n\n\nvar SliderTrackHighlightImpl = /*#__PURE__*/forwardRefWithAs(function SliderTrackHighlight(_ref4, forwardedRef) {\n  var _ref4$as = _ref4.as,\n      Comp = _ref4$as === void 0 ? \"div\" : _ref4$as,\n      children = _ref4.children,\n      _ref4$style = _ref4.style,\n      style = _ref4$style === void 0 ? {} : _ref4$style,\n      props = _objectWithoutPropertiesLoose(_ref4, [\"as\", \"children\", \"style\"]);\n\n  var _useSliderContext2 = useSliderContext(),\n      disabled = _useSliderContext2.disabled,\n      orientation = _useSliderContext2.orientation,\n      trackHighlightStyle = _useSliderContext2.trackHighlightStyle;\n\n  return React.createElement(Comp, Object.assign({\n    ref: forwardedRef,\n    style: _extends({\n      position: \"absolute\"\n    }, trackHighlightStyle, style)\n  }, props, {\n    \"data-reach-slider-track-highlight\": \"\",\n    \"data-disabled\": disabled ? \"\" : undefined,\n    \"data-orientation\": orientation\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  SliderTrackHighlightImpl.displayName = \"SliderTrackHighlight\";\n  SliderTrackHighlightImpl.propTypes = {};\n}\n\nvar SliderTrackHighlight = /*#__PURE__*/memoWithAs(SliderTrackHighlightImpl);\n\nif (process.env.NODE_ENV !== \"production\") {\n  SliderTrackHighlight.displayName = \"SliderTrackHighlight\";\n}\n/**\r\n * SliderHandle\r\n *\r\n * The handle that the user drags along the track to set the slider value.\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderhandle\r\n */\n\n\nvar SliderHandleImpl = /*#__PURE__*/forwardRefWithAs(function SliderHandle(_ref5, forwardedRef) {\n  var _ref5$as = _ref5.as,\n      Comp = _ref5$as === void 0 ? \"div\" : _ref5$as,\n      onBlur = _ref5.onBlur,\n      onFocus = _ref5.onFocus,\n      _ref5$style = _ref5.style,\n      style = _ref5$style === void 0 ? {} : _ref5$style,\n      onKeyDown = _ref5.onKeyDown,\n      props = _objectWithoutPropertiesLoose(_ref5, [\"as\", \"onBlur\", \"onFocus\", \"style\", \"onKeyDown\"]);\n\n  var _useSliderContext3 = useSliderContext(),\n      ariaLabel = _useSliderContext3.ariaLabel,\n      ariaLabelledBy = _useSliderContext3.ariaLabelledBy,\n      ariaValueText = _useSliderContext3.ariaValueText,\n      disabled = _useSliderContext3.disabled,\n      handlePosition = _useSliderContext3.handlePosition,\n      handleRef = _useSliderContext3.handleRef,\n      isVertical = _useSliderContext3.isVertical,\n      handleKeyDown = _useSliderContext3.handleKeyDown,\n      orientation = _useSliderContext3.orientation,\n      setHasFocus = _useSliderContext3.setHasFocus,\n      sliderMin = _useSliderContext3.sliderMin,\n      sliderMax = _useSliderContext3.sliderMax,\n      value = _useSliderContext3.value;\n\n  var ref = useForkedRef(handleRef, forwardedRef);\n  return React.createElement(Comp, Object.assign({\n    \"aria-disabled\": disabled || undefined,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabel ? undefined : ariaLabelledBy,\n    \"aria-orientation\": orientation,\n    \"aria-valuemax\": sliderMax,\n    \"aria-valuemin\": sliderMin,\n    \"aria-valuenow\": value,\n    \"aria-valuetext\": ariaValueText,\n    // The element serving as the focusable slider control has role\n    // `slider`.\n    // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n    role: \"slider\",\n    tabIndex: disabled ? -1 : 0\n  }, props, {\n    \"data-reach-slider-handle\": \"\",\n    ref: ref,\n    onBlur: wrapEvent(onBlur, function () {\n      setHasFocus(false);\n    }),\n    onFocus: wrapEvent(onFocus, function () {\n      setHasFocus(true);\n    }),\n    onKeyDown: wrapEvent(onKeyDown, handleKeyDown),\n    style: _extends({\n      position: \"absolute\"\n    }, isVertical ? {\n      bottom: handlePosition\n    } : {\n      left: handlePosition\n    }, style)\n  }));\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  SliderHandleImpl.displayName = \"SliderHandle\";\n  SliderHandleImpl.propTypes = {};\n}\n\nvar SliderHandle = /*#__PURE__*/memoWithAs(SliderHandleImpl);\n\nif (process.env.NODE_ENV !== \"production\") {\n  SliderHandle.displayName = \"SliderHandle\";\n}\n/**\r\n * SliderMarker\r\n *\r\n * A fixed value marker. These can be used to illustrate a range of steps or\r\n * highlight important points along the slider track.\r\n *\r\n * @see Docs https://reacttraining.com/reach-ui/slider#slidermarker\r\n */\n\n\nvar SliderMarkerImpl = /*#__PURE__*/forwardRefWithAs(function SliderMarker(_ref6, forwardedRef) {\n  var _ref6$as = _ref6.as,\n      Comp = _ref6$as === void 0 ? \"div\" : _ref6$as,\n      children = _ref6.children,\n      _ref6$style = _ref6.style,\n      style = _ref6$style === void 0 ? {} : _ref6$style,\n      value = _ref6.value,\n      props = _objectWithoutPropertiesLoose(_ref6, [\"as\", \"children\", \"style\", \"value\"]);\n\n  var _useSliderContext4 = useSliderContext(),\n      disabled = _useSliderContext4.disabled,\n      isVertical = _useSliderContext4.isVertical,\n      orientation = _useSliderContext4.orientation,\n      sliderMin = _useSliderContext4.sliderMin,\n      sliderMax = _useSliderContext4.sliderMax,\n      sliderValue = _useSliderContext4.value;\n\n  var inRange = !(value < sliderMin || value > sliderMax);\n  var absoluteStartPosition = valueToPercent(value, sliderMin, sliderMax) + \"%\";\n  var state = value < sliderValue ? \"under-value\" : value === sliderValue ? \"at-value\" : \"over-value\";\n  return inRange ? React.createElement(Comp, Object.assign({\n    ref: forwardedRef,\n    style: _extends({\n      position: \"absolute\"\n    }, isVertical ? {\n      bottom: absoluteStartPosition\n    } : {\n      left: absoluteStartPosition\n    }, style)\n  }, props, {\n    \"data-reach-slider-marker\": \"\",\n    \"data-disabled\": disabled ? \"\" : undefined,\n    \"data-orientation\": orientation,\n    \"data-state\": state,\n    \"data-value\": value,\n    children: children\n  })) : null;\n});\n\nif (process.env.NODE_ENV !== \"production\") {\n  SliderMarkerImpl.displayName = \"SliderMarker\";\n  SliderMarkerImpl.propTypes = {\n    value: PropTypes.number.isRequired\n  };\n}\n\nvar SliderMarker = /*#__PURE__*/memoWithAs(SliderMarkerImpl);\n\nif (process.env.NODE_ENV !== \"production\") {\n  SliderMarker.displayName = \"SliderMarker\";\n}\n\nfunction clamp(val, min, max) {\n  return val > max ? max : val < min ? min : val;\n}\n/**\r\n * This handles the case when num is very small (0.00000001), js will turn\r\n * this into 1e-8. When num is bigger than 1 or less than -1 it won't get\r\n * converted to this notation so it's fine.\r\n *\r\n * @param num\r\n * @see https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Slider/Slider.js#L69\r\n */\n\n\nfunction getDecimalPrecision(num) {\n  if (Math.abs(num) < 1) {\n    var parts = num.toExponential().split(\"e-\");\n    var matissaDecimalPart = parts[0].split(\".\")[1];\n    return (matissaDecimalPart ? matissaDecimalPart.length : 0) + parseInt(parts[1], 10);\n  }\n\n  var decimalPart = num.toString().split(\".\")[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction percentToValue(percent, min, max) {\n  return (max - min) * percent + min;\n}\n\nfunction roundValueToStep(value, step, min) {\n  var nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\n\nfunction getPointerPosition(event, touchId) {\n  if (touchId.current !== undefined && event.changedTouches) {\n    for (var i = 0; i < event.changedTouches.length; i += 1) {\n      var touch = event.changedTouches[i];\n\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n\n    return false;\n  }\n\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\n\nfunction getNewValue(handlePosition, track, props) {\n  var orientation = props.orientation,\n      min = props.min,\n      max = props.max,\n      step = props.step;\n\n  if (!track || !handlePosition) {\n    return null;\n  }\n\n  var _track$getBoundingCli = track.getBoundingClientRect(),\n      left = _track$getBoundingCli.left,\n      width = _track$getBoundingCli.width,\n      bottom = _track$getBoundingCli.bottom,\n      height = _track$getBoundingCli.height;\n\n  var isVertical = orientation === SliderOrientation.Vertical;\n  var diff = isVertical ? bottom - handlePosition.y : handlePosition.x - left;\n  var percent = diff / (isVertical ? height : width);\n  var newValue = percentToValue(percent, min, max);\n  return clamp(step ? roundValueToStep(newValue, step, min) : newValue, min, max);\n}\n\nfunction useDimensions(ref) {\n  var _useState2 = useState({\n    width: 0,\n    height: 0\n  }),\n      _useState2$ = _useState2[0],\n      width = _useState2$.width,\n      height = _useState2$.height,\n      setDimensions = _useState2[1]; // Many existing `useDimensions` type hooks will use `getBoundingClientRect`\n  // getBoundingClientRect does not work here when borders are applied.\n  // getComputedStyle is not as performant so we may want to create a utility to\n  // check for any conflicts with box sizing first and only use\n  // `getComputedStyle` if neccessary.\n\n  /* const { width, height } = ref.current\r\n    ? ref.current.getBoundingClientRect()\r\n    : 0; */\n\n\n  useIsomorphicLayoutEffect(function () {\n    if (ref.current) {\n      var _window$getComputedSt = window.getComputedStyle(ref.current),\n          _newHeight = _window$getComputedSt.height,\n          _newWidth = _window$getComputedSt.width;\n\n      var newHeight = parseFloat(_newHeight);\n      var newWidth = parseFloat(_newWidth);\n\n      if (newHeight !== height || newWidth !== width) {\n        setDimensions({\n          height: newHeight,\n          width: newWidth\n        });\n      }\n    }\n  }, [ref, width, height]);\n  return {\n    ref: ref,\n    width: width,\n    height: height\n  };\n}\n\nfunction valueToPercent(value, min, max) {\n  return (value - min) * 100 / (max - min);\n}\n\nexport default Slider;\nexport { SLIDER_HANDLE_ALIGN_CENTER, SLIDER_HANDLE_ALIGN_CONTAIN, SLIDER_ORIENTATION_HORIZONTAL, SLIDER_ORIENTATION_VERTICAL, Slider, SliderHandle, SliderHandleAlignment, SliderInput, SliderMarker, SliderOrientation, SliderTrack, SliderTrackHighlight };","map":{"version":3,"sources":["../src/index.tsx"],"names":["SliderOrientation","SliderHandleAlignment","SLIDER_ORIENTATION_HORIZONTAL","Horizontal","SLIDER_ORIENTATION_VERTICAL","Vertical","SLIDER_HANDLE_ALIGN_CENTER","Center","SLIDER_HANDLE_ALIGN_CONTAIN","Contain","SliderContext","createNamedContext","useSliderContext","useContext","sliderPropTypes","defaultValue","PropTypes","disabled","getAriaLabel","getAriaValueText","getValueText","handleAlignment","min","max","name","orientation","onChange","step","value","number","Slider","forwardRefWithAs","children","props","ref","forwardedRef","_componentName","React","node","SliderInput","ariaLabel","ariaLabelledBy","ariaValueTextProp","as","Comp","controlledValue","DEPRECATED_getValueText","onKeyDown","onMouseDown","onMouseMove","onMouseUp","onPointerDown","onPointerUp","onTouchEnd","onTouchMove","onTouchStart","rest","useControlledSwitchWarning","touchId","useRef","id","useId","pointerDownRef","trackRef","handleRef","sliderRef","useForkedRef","hasFocus","setHasFocus","useState","handleDimensions","useDimensions","_value","setValue","useControlledState","clamp","trackPercent","valueToPercent","isVertical","handleSize","handlePosition","handlePositionRef","useIsomorphicLayoutEffect","onChangeRef","updateValue","useCallback","current","getNewValueFromEvent","getNewValue","getPointerPosition","handleKeyDown","useEventCallback","tenSteps","keyStep","event","newValue","roundValueToStep","ariaValueText","trackHighlightStyle","width","height","bottom","left","ctx","sliderId","sliderMax","sliderMin","removeMoveEvents","removeStartEvents","removeEndEvents","appEvents","handleSlideStart","touch","addMoveListener","addEndListener","setPointerCapture","releasePointerCapture","handlePointerMove","handleSlideStop","ownerDocument","getOwnerDocument","touchListener","wrapEvent","mouseListener","pointerListener","addStartListener","useEffect","checkStyles","undefined","tabIndex","valueText","type","makeId","isRequired","SliderTrackImpl","style","position","SliderTrack","memoWithAs","SliderTrackHighlightImpl","SliderTrackHighlight","SliderHandleImpl","onBlur","onFocus","role","SliderHandle","SliderMarkerImpl","sliderValue","inRange","absoluteStartPosition","state","SliderMarker","val","Math","parts","num","matissaDecimalPart","parseInt","decimalPart","nearest","Number","getDecimalPrecision","i","x","y","clientY","track","diff","percent","percentToValue","setDimensions","_newHeight","_newWidth","window","newHeight","parseFloat","newWidth"],"mappings":"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","sourcesContent":["/**\n * Welcome to @reach/slider!\n *\n * A UI input component where the user selects a value from within a given\n * range. A Slider has a handle that can be moved along a track to change its\n * value. When the user's mouse or focus is on the Slider's handle, the value\n * can be incremented with keyboard controls.\n *\n * Random thoughts/notes:\n *  - Currently testing this against the behavior of the native input range\n *    element to get our slider on par. We'll explore animated and multi-handle\n *    sliders next.\n *  - We may want to research some use cases for reversed sliders in RTL\n *    languages if that's a thing\n *\n * @see Docs     https://reacttraining.com/reach-ui/slider\n * @see Source   https://github.com/reach/reach-ui/tree/main/packages/slider\n * @see WAI-ARIA https://www.w3.org/TR/wai-aria-practices-1.2/#slider\n * @see Example  https://github.com/Stanko/aria-progress-range-slider\n * @see Example  http://www.oaa-accessibility.org/examplep/slider1/\n */\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\nimport React, {\n  memo,\n  useCallback,\n  useContext,\n  useEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useId } from \"@reach/auto-id\";\nimport {\n  checkStyles,\n  createNamedContext,\n  forwardRefWithAs,\n  getOwnerDocument,\n  isFunction,\n  makeId,\n  memoWithAs,\n  useEventCallback,\n  useForkedRef,\n  useControlledSwitchWarning,\n  useControlledState,\n  useIsomorphicLayoutEffect,\n  warning,\n  wrapEvent,\n  noop,\n} from \"@reach/utils\";\n\n// TODO: Remove in 1.0\nexport type SliderAlignment = \"center\" | \"contain\";\n\nexport enum SliderOrientation {\n  Horizontal = \"horizontal\",\n  Vertical = \"vertical\",\n  // TODO: Add support for RTL slider\n}\n\n// TODO: Remove in 1.0\nexport enum SliderHandleAlignment {\n  // Handle is centered directly over the current value marker\n  Center = \"center\",\n  // Handle is contained within the bounds of the track, offset slightly from\n  // the value's center mark to accommodate\n  Contain = \"contain\",\n}\n\n// TODO: Remove in 1.0\nexport const SLIDER_ORIENTATION_HORIZONTAL = SliderOrientation.Horizontal;\nexport const SLIDER_ORIENTATION_VERTICAL = SliderOrientation.Vertical;\nexport const SLIDER_HANDLE_ALIGN_CENTER = SliderHandleAlignment.Center;\nexport const SLIDER_HANDLE_ALIGN_CONTAIN = SliderHandleAlignment.Contain;\n\nconst SliderContext = createNamedContext<ISliderContext>(\n  \"SliderContext\",\n  {} as ISliderContext\n);\nconst useSliderContext = () => useContext(SliderContext);\n\n// These proptypes are shared between the composed SliderInput component and the\n// simplified Slider\nconst sliderPropTypes = {\n  defaultValue: PropTypes.number,\n  disabled: PropTypes.bool,\n  getAriaLabel: PropTypes.func,\n  getAriaValueText: PropTypes.func,\n  getValueText: PropTypes.func,\n  handleAlignment: PropTypes.oneOf([\n    SliderHandleAlignment.Center,\n    SliderHandleAlignment.Contain,\n  ]),\n  min: PropTypes.number,\n  max: PropTypes.number,\n  name: PropTypes.string,\n  orientation: PropTypes.oneOf([\n    SliderOrientation.Horizontal,\n    SliderOrientation.Vertical,\n  ]),\n  onChange: PropTypes.func,\n  step: PropTypes.number,\n  value: PropTypes.number,\n};\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Slider\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slider\n */\nconst Slider = forwardRefWithAs<SliderProps, \"div\">(function Slider(\n  { children, ...props },\n  forwardedRef\n) {\n  return (\n    <SliderInput\n      {...props}\n      ref={forwardedRef}\n      data-reach-slider=\"\"\n      _componentName=\"Slider\"\n    >\n      <SliderTrack>\n        <SliderTrackHighlight />\n        <SliderHandle />\n        {children}\n      </SliderTrack>\n    </SliderInput>\n  );\n});\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/slider#slider-props\n */\nexport type SliderProps = {\n  /**\n   * `Slider` can accept `SliderMarker` children to enhance display of specific\n   * values along the track.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-children\n   */\n  children?: React.ReactNode;\n  /**\n   * The defaultValue is used to set an initial value for an uncontrolled\n   * Slider.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-defaultvalue\n   */\n  defaultValue?: number;\n  /**\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-disabled\n   */\n  disabled?: boolean;\n  /**\n   * Whether or not the slider should be disabled from user interaction.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-value\n   */\n  value?: number;\n  /**\n   * A function used to set a human-readable name for the slider.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-getarialabel\n   */\n  getAriaLabel?(value: number): string;\n  /**\n   * A function used to set a human-readable value text based on the slider's\n   * current value.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-getariavaluetext\n   */\n  getAriaValueText?(value: number): string;\n  /**\n   * Deprecated. Use `getAriaValueText` instead.\n   *\n   * @deprecated\n   * @param value\n   */\n  getValueText?(value: number): string;\n  /**\n   * When set to `center`, the slider's handle will be positioned directly\n   * centered over the slider's curremt value on the track. This means that when\n   * the slider is at its min or max value, a visiable slider handle will extend\n   * beyond the width (or height in vertical mode) of the slider track. When set\n   * to `contain`, the slider handle will always be contained within the bounds\n   * of the track, meaning its position will be slightly offset from the actual\n   * value depending on where it sits on the track.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-handlealignment\n   */\n  handleAlignment?: \"center\" | \"contain\" | SliderAlignment;\n  /**\n   * The maximum value of the slider. Defaults to `100`.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-max\n   */\n  max?: number;\n  /**\n   * The minimum value of the slider. Defaults to `0`.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-min\n   */\n  min?: number;\n  /**\n   * If the slider is used as a form input, it should accept a `name` prop to\n   * identify its value in context of the form.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-name\n   */\n  name?: string;\n  /**\n   * Callback that fires when the slider value changes. When the `value` prop is\n   * set, the Slider state becomes controlled and `onChange` must be used to\n   * update the value in response to user interaction.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-onchange\n   */\n  onChange?(\n    newValue: number,\n    props?: {\n      min?: number;\n      max?: number;\n      handlePosition?: string;\n    }\n  ): void;\n\n  // We use native DOM events for the slider since they are global\n  onMouseDown?(event: MouseEvent): void;\n  onMouseMove?(event: MouseEvent): void;\n  onMouseUp?(event: MouseEvent): void;\n  onPointerDown?(event: PointerEvent): void;\n  onPointerUp?(event: PointerEvent): void;\n  onTouchEnd?(event: TouchEvent): void;\n  onTouchMove?(event: TouchEvent): void;\n  onTouchStart?(event: TouchEvent): void;\n\n  /**\n   * Sets the slider to horizontal or vertical mode.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-orientation\n   */\n  orientation?: SliderOrientation;\n  /**\n   * The step attribute is a number that specifies the granularity that the\n   * value must adhere to as it changes. Step sets minimum intervals of change,\n   * creating a \"snap\" effect when the handle is moved along the track.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slider-step\n   */\n  step?: number;\n};\n\nif (__DEV__) {\n  Slider.displayName = \"Slider\";\n  Slider.propTypes = {\n    ...sliderPropTypes,\n    children: PropTypes.node,\n  };\n}\n\nexport { Slider };\nexport default Slider;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderInput\n *\n * The parent component of the slider interface. This is a lower level component\n * if you need more control over styles or rendering the slider's inner\n * components.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderinput\n */\nconst SliderInput = forwardRefWithAs<\n  SliderInputProps & { _componentName?: string }\n>(function SliderInput(\n  {\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledBy,\n    \"aria-valuetext\": ariaValueTextProp,\n    as: Comp = \"div\",\n    defaultValue,\n    disabled = false,\n    value: controlledValue,\n    getAriaLabel,\n    getAriaValueText,\n    getValueText: DEPRECATED_getValueText, // TODO: Remove in 1.0\n    handleAlignment = SliderHandleAlignment.Center,\n    max = 100,\n    min = 0,\n    name,\n    onChange,\n    onKeyDown,\n    onMouseDown,\n    onMouseMove,\n    onMouseUp,\n    onPointerDown,\n    onPointerUp,\n    onTouchEnd,\n    onTouchMove,\n    onTouchStart,\n    orientation = SliderOrientation.Horizontal,\n    step = 1,\n    children,\n    _componentName = \"SliderInput\",\n    ...rest\n  },\n  forwardedRef\n) {\n  useControlledSwitchWarning(controlledValue, \"value\", _componentName);\n\n  warning(\n    !DEPRECATED_getValueText,\n    \"The `getValueText` prop in @reach/slider is deprecated. Please use `getAriaValueText` instead.\"\n  );\n\n  let touchId: TouchIdRef = useRef();\n\n  let id = useId(rest.id);\n\n  // Track whether or not the pointer is down without updating the component\n  let pointerDownRef = useRef(false);\n\n  let trackRef: TrackRef = useRef(null);\n  let handleRef: HandleRef = useRef(null);\n  let sliderRef: SliderRef = useRef(null);\n  let ref = useForkedRef(sliderRef, forwardedRef);\n\n  let [hasFocus, setHasFocus] = useState(false);\n\n  let { ref: x, ...handleDimensions } = useDimensions(handleRef);\n\n  let [_value, setValue] = useControlledState(\n    controlledValue,\n    defaultValue || min\n  );\n  let value = clamp(_value, min, max);\n  let trackPercent = valueToPercent(value, min, max);\n  let isVertical = orientation === SliderOrientation.Vertical;\n\n  let handleSize = isVertical\n    ? handleDimensions.height\n    : handleDimensions.width;\n\n  // TODO: Consider removing the `handleAlignment` prop\n  // We may want to use accept a `handlePosition` prop instead and let apps\n  // define their own positioning logic, similar to how we do for popovers.\n  let handlePosition = `calc(${trackPercent}% - ${\n    handleAlignment === SliderHandleAlignment.Center\n      ? `${handleSize}px / 2`\n      : `${handleSize}px * ${trackPercent * 0.01}`\n  })`;\n  let handlePositionRef = useRef(handlePosition);\n  useIsomorphicLayoutEffect(() => {\n    handlePositionRef.current = handlePosition;\n  }, [handlePosition]);\n\n  let onChangeRef = useRef(onChange);\n  useIsomorphicLayoutEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n  let updateValue = useCallback(\n    function updateValue(newValue) {\n      setValue(newValue);\n      if (onChangeRef.current) {\n        // Prevent onChange from recreating the function\n        // TODO: Reonsider the onChange callback API\n        onChangeRef.current(newValue, {\n          min,\n          max,\n          // Prevent handlePosition from recreating the function\n          handlePosition: handlePositionRef.current,\n        });\n      }\n    },\n    [max, min, setValue]\n  );\n\n  let getNewValueFromEvent = useCallback(\n    (event: SomePointerEvent) => {\n      return getNewValue(getPointerPosition(event, touchId), trackRef.current, {\n        step,\n        orientation,\n        min,\n        max,\n      });\n    },\n    [max, min, orientation, step]\n  );\n\n  // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_kbd_interaction\n  let handleKeyDown = useEventCallback((event: React.KeyboardEvent) => {\n    if (disabled) {\n      return;\n    }\n\n    let newValue: number;\n    let tenSteps = (max - min) / 10;\n    let keyStep = step || (max - min) / 100;\n\n    switch (event.key) {\n      // Decrease the value of the slider by one step.\n      case \"ArrowLeft\":\n      case \"ArrowDown\":\n        newValue = value - keyStep;\n        break;\n      // Increase the value of the slider by one step\n      case \"ArrowRight\":\n      case \"ArrowUp\":\n        newValue = value + keyStep;\n        break;\n      // Decrement the slider by an amount larger than the step change made by\n      // `ArrowDown`.\n      case \"PageDown\":\n        newValue = value - tenSteps;\n        break;\n      // Increment the slider by an amount larger than the step change made by\n      // `ArrowUp`.\n      case \"PageUp\":\n        newValue = value + tenSteps;\n        break;\n      // Set the slider to the first allowed value in its range.\n      case \"Home\":\n        newValue = min;\n        break;\n      // Set the slider to the last allowed value in its range.\n      case \"End\":\n        newValue = max;\n        break;\n      default:\n        return;\n    }\n\n    event.preventDefault();\n    newValue = clamp(\n      step ? roundValueToStep(newValue, step, min) : newValue,\n      min,\n      max\n    );\n    updateValue(newValue);\n  });\n\n  let ariaValueText = DEPRECATED_getValueText\n    ? DEPRECATED_getValueText(value)\n    : getAriaValueText\n    ? getAriaValueText(value)\n    : ariaValueTextProp;\n\n  let trackHighlightStyle = isVertical\n    ? {\n        width: `100%`,\n        height: `${trackPercent}%`,\n        bottom: 0,\n      }\n    : {\n        width: `${trackPercent}%`,\n        height: `100%`,\n        left: 0,\n      };\n\n  let ctx: ISliderContext = {\n    ariaLabel: getAriaLabel ? getAriaLabel(value) : ariaLabel,\n    ariaLabelledBy,\n    ariaValueText,\n    handleDimensions,\n    handleKeyDown,\n    handlePosition,\n    handleRef,\n    hasFocus,\n    onKeyDown,\n    setHasFocus,\n    sliderId: id,\n    sliderMax: max,\n    sliderMin: min,\n    value,\n    disabled: !!disabled,\n    isVertical,\n    orientation,\n    trackPercent,\n    trackRef,\n    trackHighlightStyle,\n    updateValue,\n  };\n\n  // Slide events!\n  // We will try to use pointer events if they are supported to leverage\n  // setPointerCapture and releasePointerCapture. We'll fall back to separate\n  // mouse and touch events.\n  // TODO: This could be more concise\n  let removeMoveEvents = useRef<() => void>(noop);\n  let removeStartEvents = useRef<() => void>(noop);\n  let removeEndEvents = useRef<() => void>(noop);\n\n  // Store our event handlers in refs so we aren't attaching/detaching events\n  // on every render if the user doesn't useCallback\n  let appEvents = useRef({\n    onMouseMove,\n    onMouseDown,\n    onMouseUp,\n    onTouchStart,\n    onTouchEnd,\n    onTouchMove,\n    onPointerDown,\n    onPointerUp,\n  });\n  useIsomorphicLayoutEffect(() => {\n    appEvents.current.onMouseMove = onMouseMove;\n    appEvents.current.onMouseDown = onMouseDown;\n    appEvents.current.onMouseUp = onMouseUp;\n    appEvents.current.onTouchStart = onTouchStart;\n    appEvents.current.onTouchEnd = onTouchEnd;\n    appEvents.current.onTouchMove = onTouchMove;\n    appEvents.current.onPointerDown = onPointerDown;\n    appEvents.current.onPointerUp = onPointerUp;\n  }, [onMouseMove, onMouseDown, onMouseUp, onTouchStart, onTouchEnd, onTouchMove, onPointerDown, onPointerUp]);\n\n  let handleSlideStart = useEventCallback((event: SomePointerEvent) => {\n    if (disabled) {\n      pointerDownRef.current = false;\n      return;\n    }\n\n    pointerDownRef.current = true;\n\n    if ((event as TouchEvent).changedTouches) {\n      // Prevent scrolling for touch events\n      event.preventDefault();\n      let touch = (event as TouchEvent).changedTouches?.[0];\n      if (touch != null) {\n        touchId.current = touch.identifier;\n      }\n    }\n\n    let newValue = getNewValueFromEvent(event);\n    if (newValue == null) {\n      return;\n    }\n    handleRef.current?.focus();\n    updateValue(newValue);\n\n    removeMoveEvents.current = addMoveListener();\n    removeEndEvents.current = addEndListener();\n  });\n\n  let setPointerCapture = useEventCallback((event: PointerEvent) => {\n    if (disabled) {\n      pointerDownRef.current = false;\n      return;\n    }\n    pointerDownRef.current = true;\n    sliderRef.current?.setPointerCapture(event.pointerId);\n  });\n\n  let releasePointerCapture = useEventCallback((event: PointerEvent) => {\n    sliderRef.current?.releasePointerCapture(event.pointerId);\n    pointerDownRef.current = false;\n  });\n\n  let handlePointerMove = useEventCallback((event: SomePointerEvent) => {\n    if (disabled || !pointerDownRef.current) {\n      pointerDownRef.current = false;\n      return;\n    }\n\n    let newValue = getNewValueFromEvent(event);\n    if (newValue == null) {\n      return;\n    }\n    updateValue(newValue);\n  });\n\n  let handleSlideStop = useEventCallback((event: SomePointerEvent) => {\n    pointerDownRef.current = false;\n\n    let newValue = getNewValueFromEvent(event);\n    if (newValue == null) {\n      return;\n    }\n\n    touchId.current = undefined;\n\n    removeMoveEvents.current();\n    removeEndEvents.current();\n  });\n\n  let addMoveListener = useCallback(() => {\n    let ownerDocument = getOwnerDocument(sliderRef.current!) || document;\n    let touchListener = wrapEvent(\n      appEvents.current.onTouchMove,\n      handlePointerMove\n    );\n    let mouseListener = wrapEvent(\n      appEvents.current.onMouseMove,\n      handlePointerMove\n    );\n    ownerDocument.addEventListener(\"touchmove\", touchListener);\n    ownerDocument.addEventListener(\"mousemove\", mouseListener);\n    return () => {\n      ownerDocument.removeEventListener(\"touchmove\", touchListener);\n      ownerDocument.removeEventListener(\"mousemove\", mouseListener);\n    };\n  }, [handlePointerMove]);\n\n  let addEndListener = useCallback(() => {\n    let ownerDocument = getOwnerDocument(sliderRef.current!) || document;\n    let pointerListener = wrapEvent(\n      appEvents.current.onPointerUp,\n      releasePointerCapture\n    );\n    let touchListener = wrapEvent(\n      appEvents.current.onTouchEnd,\n      handleSlideStop\n    );\n    let mouseListener = wrapEvent(appEvents.current.onMouseUp, handleSlideStop);\n    if (\"PointerEvent\" in window) {\n      ownerDocument.addEventListener(\"pointerup\", pointerListener);\n    }\n    ownerDocument.addEventListener(\"touchend\", touchListener);\n    ownerDocument.addEventListener(\"mouseup\", mouseListener);\n    return () => {\n      if (\"PointerEvent\" in window) {\n        ownerDocument.removeEventListener(\"pointerup\", pointerListener);\n      }\n      ownerDocument.removeEventListener(\"touchend\", touchListener);\n      ownerDocument.removeEventListener(\"mouseup\", mouseListener);\n    };\n  }, [handleSlideStop, releasePointerCapture]);\n\n  let addStartListener = useCallback(() => {\n    let touchListener = wrapEvent(\n      appEvents.current.onTouchStart,\n      handleSlideStart\n    );\n    let mouseListener = wrapEvent(\n      appEvents.current.onMouseDown,\n      handleSlideStart\n    );\n    let pointerListener = wrapEvent(\n      appEvents.current.onPointerDown,\n      setPointerCapture\n    );\n\n    // e.preventDefault is ignored by React's synthetic touchStart event, so\n    // we attach the listener directly to the DOM node\n    // https://github.com/facebook/react/issues/9809#issuecomment-413978405\n    sliderRef.current!.addEventListener(\"touchstart\", touchListener);\n    sliderRef.current!.addEventListener(\"mousedown\", mouseListener);\n    if (\"PointerEvent\" in window) {\n      sliderRef.current!.addEventListener(\"pointerdown\", pointerListener);\n    }\n    return () => {\n      sliderRef.current!.removeEventListener(\"touchstart\", touchListener);\n      sliderRef.current!.removeEventListener(\"mousedown\", mouseListener);\n      if (\"PointerEvent\" in window) {\n        sliderRef.current!.removeEventListener(\"pointerdown\", pointerListener);\n      }\n    };\n  }, [setPointerCapture, handleSlideStart]);\n\n  useEffect(() => {\n    removeStartEvents.current = addStartListener();\n\n    return () => {\n      removeStartEvents.current();\n      removeEndEvents.current();\n      removeMoveEvents.current();\n    };\n  }, [addStartListener]);\n\n  useEffect(() => checkStyles(\"slider\"), []);\n\n  return (\n    <SliderContext.Provider value={ctx}>\n      <Comp\n        {...rest}\n        ref={ref}\n        data-reach-slider-input=\"\"\n        data-disabled={disabled ? \"\" : undefined}\n        data-orientation={orientation}\n        tabIndex={-1}\n      >\n        {isFunction(children)\n          ? children({\n              hasFocus,\n              id,\n              max,\n              min,\n              value,\n              ariaValueText,\n              valueText: ariaValueText, // TODO: Remove in 1.0\n            })\n          : children}\n        {name && (\n          // If the slider is used in a form we'll need an input field to\n          // capture the value. We'll assume this when the component is given a\n          // form field name (A `name` prop doesn't really make sense in any\n          // other context).\n          <input\n            type=\"hidden\"\n            value={value}\n            name={name}\n            id={id && makeId(\"input\", id)}\n          />\n        )}\n      </Comp>\n    </SliderContext.Provider>\n  );\n});\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderinput-props\n */\nexport type SliderInputProps = Omit<SliderProps, \"children\"> & {\n  /**\n   * Slider expects `<SliderTrack>` as its child; The track will accept all\n   * additional slider sub-components as children. It can also accept a\n   * function/render prop as its child to expose some of its internal state\n   * variables.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#sliderinput-children\n   */\n  children: React.ReactNode | SliderChildrenRender;\n};\n\nif (__DEV__) {\n  SliderInput.displayName = \"SliderInput\";\n  SliderInput.propTypes = {\n    ...sliderPropTypes,\n    children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n  };\n}\n\nexport { SliderInput };\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderTrack\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrack\n */\nconst SliderTrackImpl = forwardRefWithAs<SliderTrackProps>(function SliderTrack(\n  { as: Comp = \"div\", children, style = {}, ...props },\n  forwardedRef\n) {\n  const { disabled, orientation, trackRef } = useSliderContext();\n  const ref = useForkedRef(trackRef, forwardedRef);\n\n  return (\n    <Comp\n      ref={ref}\n      style={{ ...style, position: \"relative\" }}\n      {...props}\n      data-reach-slider-track=\"\"\n      data-disabled={disabled ? \"\" : undefined}\n      data-orientation={orientation}\n    >\n      {children}\n    </Comp>\n  );\n});\n\nif (__DEV__) {\n  SliderTrackImpl.displayName = \"SliderTrack\";\n  SliderTrackImpl.propTypes = {\n    children: PropTypes.node.isRequired,\n  };\n}\n\nconst SliderTrack = memoWithAs(SliderTrackImpl);\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrack-props\n */\nexport type SliderTrackProps = {\n  /**\n   * `SliderTrack` expects `<SliderHandle>`, at minimum, for the Slider to\n   * function. All other Slider subcomponents should be passed as children\n   * inside the `SliderTrack`.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slidertrack-children\n   */\n  children: React.ReactNode;\n};\n\nif (__DEV__) {\n  SliderTrack.displayName = \"SliderTrack\";\n}\n\nexport { SliderTrack };\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderTrackHighlight\n *\n * The (typically) highlighted portion of the track that represents the space\n * between the slider's `min` value and its current value.\n *\n * TODO: Consider renaming to `SliderTrackProgress`\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrackhighlight\n */\nconst SliderTrackHighlightImpl = forwardRefWithAs<SliderTrackHighlightProps>(\n  function SliderTrackHighlight(\n    { as: Comp = \"div\", children, style = {}, ...props },\n    forwardedRef\n  ) {\n    let { disabled, orientation, trackHighlightStyle } = useSliderContext();\n    return (\n      <Comp\n        ref={forwardedRef}\n        style={{ position: \"absolute\", ...trackHighlightStyle, ...style }}\n        {...props}\n        data-reach-slider-track-highlight=\"\"\n        data-disabled={disabled ? \"\" : undefined}\n        data-orientation={orientation}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  SliderTrackHighlightImpl.displayName = \"SliderTrackHighlight\";\n  SliderTrackHighlightImpl.propTypes = {};\n}\n\nconst SliderTrackHighlight = memoWithAs(SliderTrackHighlightImpl);\n\n/**\n * `SliderTrackHighlight` accepts any props that a HTML div component accepts.\n * `SliderTrackHighlight` will not accept or render any children.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slidertrackhighlight-props\n */\nexport type SliderTrackHighlightProps = {};\n\nif (__DEV__) {\n  SliderTrackHighlight.displayName = \"SliderTrackHighlight\";\n}\n\nexport { SliderTrackHighlight };\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderHandle\n *\n * The handle that the user drags along the track to set the slider value.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderhandle\n */\nconst SliderHandleImpl = forwardRefWithAs<SliderHandleProps>(\n  function SliderHandle(\n    {\n      // min,\n      // max,\n      as: Comp = \"div\",\n      onBlur,\n      onFocus,\n      style = {},\n      onKeyDown,\n      ...props\n    },\n    forwardedRef\n  ) {\n    const {\n      ariaLabel,\n      ariaLabelledBy,\n      ariaValueText,\n      disabled,\n      handlePosition,\n      handleRef,\n      isVertical,\n      handleKeyDown,\n      orientation,\n      setHasFocus,\n      sliderMin,\n      sliderMax,\n      value,\n    } = useSliderContext();\n\n    const ref = useForkedRef(handleRef, forwardedRef);\n\n    return (\n      <Comp\n        aria-disabled={disabled || undefined}\n        // If the slider has a visible label, it is referenced by\n        // `aria-labelledby` on the slider element. Otherwise, the slider\n        // element has a label provided by `aria-label`.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-label={ariaLabel}\n        aria-labelledby={ariaLabel ? undefined : ariaLabelledBy}\n        // If the slider is vertically oriented, it has `aria-orientation` set\n        // to vertical. The default value of `aria-orientation` for a slider is\n        // horizontal.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-orientation={orientation}\n        // The slider element has the `aria-valuemax` property set to a decimal\n        // value representing the maximum allowed value of the slider.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-valuemax={sliderMax}\n        // The slider element has the `aria-valuemin` property set to a decimal\n        // value representing the minimum allowed value of the slider.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-valuemin={sliderMin}\n        // The slider element has the `aria-valuenow` property set to a decimal\n        // value representing the current value of the slider.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-valuenow={value}\n        // If the value of `aria-valuenow` is not user-friendly, e.g., the day\n        // of the week is represented by a number, the `aria-valuetext` property\n        // is set to a string that makes the slider value understandable, e.g.,\n        // \"Monday\".\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        aria-valuetext={ariaValueText}\n        // The element serving as the focusable slider control has role\n        // `slider`.\n        // https://www.w3.org/TR/wai-aria-practices-1.2/#slider_roles_states_props\n        role=\"slider\"\n        tabIndex={disabled ? -1 : 0}\n        {...props}\n        data-reach-slider-handle=\"\"\n        ref={ref}\n        onBlur={wrapEvent(onBlur, () => {\n          setHasFocus(false);\n        })}\n        onFocus={wrapEvent(onFocus, () => {\n          setHasFocus(true);\n        })}\n        onKeyDown={wrapEvent(onKeyDown, handleKeyDown)}\n        style={{\n          position: \"absolute\",\n          ...(isVertical\n            ? { bottom: handlePosition }\n            : { left: handlePosition }),\n          ...style,\n        }}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  SliderHandleImpl.displayName = \"SliderHandle\";\n  SliderHandleImpl.propTypes = {};\n}\n\nconst SliderHandle = memoWithAs(SliderHandleImpl);\n\n/**\n * `SliderTrackHighlight` accepts any props that a HTML div component accepts.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#sliderhandle-props\n */\nexport type SliderHandleProps = {};\n\nif (__DEV__) {\n  SliderHandle.displayName = \"SliderHandle\";\n}\n\nexport { SliderHandle };\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * SliderMarker\n *\n * A fixed value marker. These can be used to illustrate a range of steps or\n * highlight important points along the slider track.\n *\n * @see Docs https://reacttraining.com/reach-ui/slider#slidermarker\n */\nconst SliderMarkerImpl = forwardRefWithAs<SliderMarkerProps>(\n  function SliderMarker(\n    { as: Comp = \"div\", children, style = {}, value, ...props },\n    forwardedRef\n  ) {\n    const {\n      disabled,\n      isVertical,\n      orientation,\n      sliderMin,\n      sliderMax,\n      value: sliderValue,\n    } = useSliderContext();\n\n    let inRange = !(value < sliderMin || value > sliderMax);\n    let absoluteStartPosition = `${valueToPercent(\n      value,\n      sliderMin,\n      sliderMax\n    )}%`;\n\n    let state =\n      value < sliderValue\n        ? \"under-value\"\n        : value === sliderValue\n        ? \"at-value\"\n        : \"over-value\";\n\n    return inRange ? (\n      <Comp\n        ref={forwardedRef}\n        style={{\n          position: \"absolute\",\n          ...(isVertical\n            ? { bottom: absoluteStartPosition }\n            : { left: absoluteStartPosition }),\n          ...style,\n        }}\n        {...props}\n        data-reach-slider-marker=\"\"\n        data-disabled={disabled ? \"\" : undefined}\n        data-orientation={orientation}\n        data-state={state}\n        data-value={value}\n        children={children}\n      />\n    ) : null;\n  }\n);\n\nif (__DEV__) {\n  SliderMarkerImpl.displayName = \"SliderMarker\";\n  SliderMarkerImpl.propTypes = {\n    value: PropTypes.number.isRequired,\n  };\n}\n\nconst SliderMarker = memoWithAs(SliderMarkerImpl);\n\n/**\n * @see Docs https://reacttraining.com/reach-ui/slider#slidermarker-props\n */\nexport type SliderMarkerProps = {\n  /**\n   * The value to denote where the marker should appear along the track.\n   *\n   * @see Docs https://reacttraining.com/reach-ui/slider#slidermarker-value\n   */\n  value: number;\n};\n\nif (__DEV__) {\n  SliderMarker.displayName = \"SliderMarker\";\n}\n\nexport { SliderMarker };\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction clamp(val: number, min: number, max: number) {\n  return val > max ? max : val < min ? min : val;\n}\n\n/**\n * This handles the case when num is very small (0.00000001), js will turn\n * this into 1e-8. When num is bigger than 1 or less than -1 it won't get\n * converted to this notation so it's fine.\n *\n * @param num\n * @see https://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Slider/Slider.js#L69\n */\nfunction getDecimalPrecision(num: number) {\n  if (Math.abs(num) < 1) {\n    const parts = num.toExponential().split(\"e-\");\n    const matissaDecimalPart = parts[0].split(\".\")[1];\n    return (\n      (matissaDecimalPart ? matissaDecimalPart.length : 0) +\n      parseInt(parts[1], 10)\n    );\n  }\n\n  const decimalPart = num.toString().split(\".\")[1];\n  return decimalPart ? decimalPart.length : 0;\n}\n\nfunction percentToValue(percent: number, min: number, max: number) {\n  return (max - min) * percent + min;\n}\n\nfunction roundValueToStep(value: number, step: number, min: number) {\n  let nearest = Math.round((value - min) / step) * step + min;\n  return Number(nearest.toFixed(getDecimalPrecision(step)));\n}\n\nfunction getPointerPosition(event: SomePointerEvent, touchId: TouchIdRef) {\n  if (touchId.current !== undefined && (event as TouchEvent).changedTouches) {\n    for (let i = 0; i < (event as TouchEvent).changedTouches.length; i += 1) {\n      const touch = (event as TouchEvent).changedTouches[i];\n      if (touch.identifier === touchId.current) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY,\n        };\n      }\n    }\n\n    return false;\n  }\n\n  return {\n    x: (event as PointerEvent | MouseEvent).clientX,\n    y: (event as PointerEvent | MouseEvent).clientY,\n  };\n}\n\nfunction getNewValue(\n  handlePosition:\n    | {\n        x: number;\n        y: number;\n      }\n    | false,\n  track: HTMLElement | null,\n  props: {\n    orientation: SliderOrientation;\n    min: number;\n    max: number;\n    step?: number;\n  }\n) {\n  let { orientation, min, max, step } = props;\n\n  if (!track || !handlePosition) {\n    return null;\n  }\n\n  let { left, width, bottom, height } = track.getBoundingClientRect();\n  let isVertical = orientation === SliderOrientation.Vertical;\n  let diff = isVertical ? bottom - handlePosition.y : handlePosition.x - left;\n  let percent = diff / (isVertical ? height : width);\n  let newValue = percentToValue(percent, min, max);\n\n  return clamp(\n    step ? roundValueToStep(newValue, step, min) : newValue,\n    min,\n    max\n  );\n}\n\nfunction useDimensions(ref: React.RefObject<HTMLElement | null>) {\n  const [{ width, height }, setDimensions] = useState({ width: 0, height: 0 });\n  // Many existing `useDimensions` type hooks will use `getBoundingClientRect`\n  // getBoundingClientRect does not work here when borders are applied.\n  // getComputedStyle is not as performant so we may want to create a utility to\n  // check for any conflicts with box sizing first and only use\n  // `getComputedStyle` if neccessary.\n  /* const { width, height } = ref.current\n    ? ref.current.getBoundingClientRect()\n    : 0; */\n\n  useIsomorphicLayoutEffect(() => {\n    if (ref.current) {\n      const { height: _newHeight, width: _newWidth } = window.getComputedStyle(\n        ref.current\n      );\n      let newHeight = parseFloat(_newHeight);\n      let newWidth = parseFloat(_newWidth);\n\n      if (newHeight !== height || newWidth !== width) {\n        setDimensions({ height: newHeight, width: newWidth });\n      }\n    }\n  }, [ref, width, height]);\n  return { ref, width, height };\n}\n\nfunction valueToPercent(value: number, min: number, max: number) {\n  return ((value - min) * 100) / (max - min);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Types\n\ntype TrackRef = React.RefObject<HTMLDivElement | null>;\ntype HandleRef = React.RefObject<HTMLDivElement | null>;\ntype SliderRef = React.RefObject<HTMLDivElement | null>;\ntype TouchIdRef = React.MutableRefObject<number | undefined>;\n\ntype SomePointerEvent = TouchEvent | MouseEvent;\n\ninterface ISliderContext {\n  ariaLabel: string | undefined;\n  ariaLabelledBy: string | undefined;\n  ariaValueText: string | undefined;\n  handleDimensions: {\n    width: number;\n    height: number;\n  };\n  handlePosition: string;\n  handleRef: HandleRef;\n  hasFocus: boolean;\n  onKeyDown?: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  handleKeyDown: (event: React.KeyboardEvent<HTMLDivElement>) => void;\n  setHasFocus: React.Dispatch<React.SetStateAction<boolean>>;\n  sliderId: string | undefined;\n  sliderMax: number;\n  sliderMin: number;\n  value: number;\n  disabled: boolean;\n  isVertical: boolean;\n  orientation: SliderOrientation;\n  trackPercent: number;\n  trackRef: TrackRef;\n  trackHighlightStyle: React.CSSProperties;\n  updateValue: (newValue: any) => void;\n}\n\ntype SliderChildrenRender = (props: {\n  ariaValueText?: string | undefined;\n  hasFocus?: boolean;\n  id?: string | undefined;\n  sliderId?: string | undefined;\n  max?: number;\n  min?: number;\n  value?: number;\n  valueText?: string | undefined; // TODO: Remove in 1.0\n}) => JSX.Element;\n"]},"metadata":{},"sourceType":"module"}