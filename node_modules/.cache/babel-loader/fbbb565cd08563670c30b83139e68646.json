{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/projektek/bmi/src/App.js\";\nimport React, { useState } from 'react';\nimport './App.css';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\n\nconst App = () => {\n  let [height, setHeight] = useState(0);\n  let [weight, setWeight] = useState(0);\n  let [heightErr, setHeightErr] = useState(\"\");\n  let [weightErr, setWeightErr] = useState(\"\");\n  let [bmiValue, setBmiValue] = useState(\"\");\n  let [bmiText, setBmiText] = useState(\"\");\n  let [chonkVisibility, setChonkVisibility] = useState(\"invisibleChonk\");\n  let [text, setText] = useState();\n  let [resultChonk, setResultChonk] = useState(\"visibleChonk\");\n  let AllChonkImg = {\n    slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/4.jpg\"],\n    normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/5.jpg\"],\n    fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n    tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\"]\n  };\n  const minHeight = 95;\n  const maxHeight = 220;\n  const minWeight = 10;\n  const maxWeight = 300;\n  const slimThre = 18.5;\n  const normalThre = 24.9;\n  const fatThre = 29.9;\n\n  const handleHeightChange = event => {\n    //spinner\n    setHeight(event.target.value);\n  };\n\n  const handleWeightChange = event => {\n    //spinner\n    setWeight(event.target.value);\n  };\n\n  const handleHeightSliderChange = value => {\n    //range\n    setHeight(value);\n  };\n\n  const handleWeightSliderChange = value => {\n    //range\n    setWeight(value);\n  }; //limiting input to numbers\n\n\n  const handleKeyPress = (source, event) => {\n    let allowedChars = \".0123456789\";\n    let currentChar = event.key;\n    let found = false;\n\n    for (let i = 0; i < allowedChars.length; i++) {\n      if (currentChar === allowedChars[i]) {\n        found = true;\n      }\n    }\n\n    if (found === false) {\n      event.preventDefault();\n      return;\n    } //limiting number input in height/weight\n\n\n    let currentValue = 0;\n\n    if (source === 'height') {\n      currentValue = parseInt(height + currentChar);\n\n      if (currentValue > maxHeight) {\n        event.preventDefault();\n      }\n    } else {\n      currentValue = weight + currentChar;\n\n      if (currentValue > maxWeight) {\n        event.preventDefault();\n      }\n    }\n  }; //classifying the results w/images, calculating BMI\n\n\n  const classifyResult = result => {\n    if (result < slimThre) {\n      return \"slim\";\n    }\n\n    if (result <= normalThre) {\n      return \"normal\";\n    }\n\n    if (result <= fatThre) {\n      return \"fat\";\n    }\n\n    return \"tooFat\";\n  }; //height, weight validation and min/max manual input nrs \n\n\n  const validate = () => {\n    setHeightErr(\"\");\n    setWeightErr(\"\");\n    let heightErrStr = \"\";\n    let weightErrStr = \"\"; //error messageges for H/W\n\n    if (!height) {\n      heightErrStr = \"Please, enter height\";\n    } else if (height < minHeight) {\n      heightErrStr = \"Greater than 95, please\";\n    } else if (height > maxHeight) {\n      heightErrStr = \"Less than 220, please\";\n    }\n\n    if (!weight) {\n      weightErrStr = \"Please, enter weight\";\n    } else if (weight < minWeight) {\n      weightErrStr = \"Greater than 10, please\";\n    } else if (weight > maxWeight) {\n      weightErrStr = \"Less than 300, please\";\n    }\n\n    if (heightErrStr || weightErrStr) {\n      setHeightErr(heightErrStr);\n      setWeightErr(weightErrStr);\n      return false;\n    }\n\n    return true;\n  };\n\n  const calcBmi = event => {\n    if (!validate()) {\n      return;\n    }\n\n    let bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    let chonks = null;\n    let resultString = \"\";\n\n    switch (classifyResult(bmi)) {\n      case \"slim\":\n        {\n          chonks = AllChonkImg.slimChonk;\n          resultString = \"You're pretty slonky, have a burger!\";\n          break;\n        }\n\n      case \"normal\":\n        {\n          chonks = AllChonkImg.normalChonk;\n          resultString = \"You're okay...for now.\";\n          break;\n        }\n\n      case \"fat\":\n        {\n          chonks = AllChonkImg.fatChonk;\n          resultString = \"You're getting kind of fat...\";\n          break;\n        }\n\n      case \"tooFat\":\n        {\n          chonks = AllChonkImg.tooFatChonk;\n          resultString = \"You're quite the chonker, there!\";\n          break;\n        }\n    } // getting the random images and avoiding duplicates\n\n\n    let randNum = Math.floor(Math.random() * chonks.length);\n    let randChonk = chonks[randNum];\n\n    if (resultChonk === randChonk) {\n      calcBmi(event);\n      return;\n    }\n\n    setResultChonk(randChonk);\n    setChonkVisibility(\"visibleChonk\");\n    setBmiText(resultString);\n    setBmiValue(bmi);\n    setText(\"invisibleChonk\");\n  }; // clear button\n\n\n  const clear = event => {\n    event.preventDefault();\n    setHeight(0);\n    setWeight(0);\n    setBmiValue(\"\");\n    setChonkVisibility(\"invisibleChonk\");\n    setHeightErr(\"\");\n    setWeightErr(\"\");\n    setText(\"visibleChonk\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"Calculate Your Body Mass Index\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"Height (95cm-220cm)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"height\",\n    step: \"0.5\",\n    min: minHeight,\n    max: maxHeight,\n    value: height,\n    onChange: handleHeightChange,\n    onKeyPress: handleKeyPress.bind(this, 'height'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, heightErr), /*#__PURE__*/React.createElement(Slider, {\n    className: \"slider\",\n    min: minHeight,\n    max: maxHeight,\n    step: 0.5,\n    value: height,\n    onChange: handleHeightSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, \"Weight (10kg-300kg)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"weight\",\n    step: \"0.5\",\n    placeholder: \"kg\",\n    min: minWeight,\n    max: maxWeight,\n    value: weight,\n    onChange: handleWeightChange,\n    onKeyPress: handleKeyPress.bind(this, 'weight'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 17\n    }\n  }, weightErr), /*#__PURE__*/React.createElement(Slider, {\n    className: \"slider\",\n    min: minWeight,\n    max: maxWeight,\n    step: 0.5,\n    value: weight,\n    onChange: handleWeightSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: event => {\n      event.preventDefault();\n      calcBmi();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 16\n    }\n  }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"button\",\n    onClick: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }\n  }, \"Clear\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: chonkVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: resultChonk,\n    alt: \"pictures of cats is various sizes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"result-top-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 19\n    }\n  }, \"Your current BMI is \", bmiValue)), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"bmi-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, bmiText)), /*#__PURE__*/React.createElement(\"h3\", {\n    className: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 15\n    }\n  }, \"Body mass index, abbreviated BMI, is a key index for relating weight to height.\", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, \"BMI is a person's weight in kilograms (kg) divided by his or her height in meters squared.\"), \"The National Institutes of Health (NIH) now defines normal weight, overweight, and obesity according to BMI rather than the traditional height/weight charts.\", /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 19\n    }\n  }, \"Overweight is a BMI of 25\\u201329.9.\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 19\n    }\n  }, \"Obesity is a BMI of 30 or more. A very muscular person might have a high BMI without health risks.\"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"scale\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"imgur.com/a/chlRabm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 15\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/sebestyenboglarka/projektek/bmi/src/App.js"],"names":["React","useState","Slider","App","height","setHeight","weight","setWeight","heightErr","setHeightErr","weightErr","setWeightErr","bmiValue","setBmiValue","bmiText","setBmiText","chonkVisibility","setChonkVisibility","text","setText","resultChonk","setResultChonk","AllChonkImg","slimChonk","normalChonk","fatChonk","tooFatChonk","minHeight","maxHeight","minWeight","maxWeight","slimThre","normalThre","fatThre","handleHeightChange","event","target","value","handleWeightChange","handleHeightSliderChange","handleWeightSliderChange","handleKeyPress","source","allowedChars","currentChar","key","found","i","length","preventDefault","currentValue","parseInt","classifyResult","result","validate","heightErrStr","weightErrStr","calcBmi","bmi","toFixed","chonks","resultString","randNum","Math","floor","random","randChonk","clear","bind"],"mappings":"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","sourcesContent":["  import React, {useState} from 'react'\n  import './App.css'\n  import Slider from 'react-rangeslider'\n  import 'react-rangeslider/lib/index.css'\n\n\n   const App = () =>  {\n    let [height, setHeight] = useState(0)\n    let [weight, setWeight] = useState(0)\n    let [heightErr, setHeightErr] = useState(\"\")\n    let [weightErr, setWeightErr] = useState(\"\")\n    let [bmiValue, setBmiValue] = useState(\"\")\n    let [bmiText, setBmiText] = useState(\"\")\n    let [chonkVisibility, setChonkVisibility] = useState(\"invisibleChonk\")\n    let [text, setText] = useState()\n    let [resultChonk, setResultChonk] = useState(\"visibleChonk\")\n    let AllChonkImg = {\n      slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/4.jpg\"],\n      normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/5.jpg\"],\n      fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n      tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\"]\n    }\n\n    const minHeight = 95\n    const maxHeight = 220\n    const minWeight = 10\n    const maxWeight = 300\n    const slimThre = 18.5\n    const normalThre = 24.9\n    const fatThre = 29.9\n\n    const handleHeightChange = event => { //spinner\n      setHeight(event.target.value)\n    }\n\n    const handleWeightChange = event => { //spinner\n      setWeight(event.target.value)\n    }\n\n    const handleHeightSliderChange = value => { //range\n      setHeight(value)\n    }\n\n    const handleWeightSliderChange = value => { //range\n      setWeight(value)\n    }\n    \n\n    //limiting input to numbers\n    const handleKeyPress = (source, event) => {\n        let allowedChars = \".0123456789\"\n        let currentChar = event.key\n        let found = false\n        for (let i = 0;  i < allowedChars.length; i++) {\n          if (currentChar === allowedChars[i]) {\n            found = true\n          }\n        }\n        if(found === false) {\n          event.preventDefault()\n          return\n        }\n\n      //limiting number input in height/weight\n      let currentValue = 0   \n            if (source === 'height') {\n              currentValue = parseInt(height + currentChar)\n              if (currentValue > maxHeight) {\n                event.preventDefault()\n              }\n            } else {\n              currentValue = weight + currentChar\n              if (currentValue > maxWeight) {\n                event.preventDefault()\n              }\n            }\n    }\n\n\n    //classifying the results w/images, calculating BMI\n    const classifyResult = result => {\n        if (result < slimThre) {\n            return \"slim\"\n        }\n        if (result <= normalThre) {\n          return \"normal\"\n        }\n        if (result <= fatThre) {\n          return \"fat\"\n        }\n        return \"tooFat\"\n    }\n\n    //height, weight validation and min/max manual input nrs \n    const validate = () => {\n      setHeightErr(\"\")\n      setWeightErr(\"\")\n\n      let heightErrStr = \"\"\n      let weightErrStr = \"\"\n\n      //error messageges for H/W\n      if(!height) {\n        heightErrStr = \"Please, enter height\"\n      } else if(height < minHeight) {\n        heightErrStr = \"Greater than 95, please\"\n      } else if(height > maxHeight) {\n        heightErrStr = \"Less than 220, please\"\n      }\n        \n      if(!weight) {\n        weightErrStr = \"Please, enter weight\"\n      } else if(weight < minWeight) {\n         weightErrStr = \"Greater than 10, please\"\n      } else if(weight > maxWeight) {\n         weightErrStr = \"Less than 300, please\"\n      }\n    \n     if(heightErrStr || weightErrStr) { \n        setHeightErr(heightErrStr)\n        setWeightErr(weightErrStr)\n        return false \n      }\n      return true \n    }\n\n\n    const calcBmi = event => {\n      if(!validate()) {\n        return \n      }\n\n     \n      let bmi = (weight / (height/100 * height/100)).toFixed(1)\n      let chonks = null\n      let resultString = \"\"\n\n\n      switch (classifyResult(bmi)) {\n        case \"slim\": {\n          chonks = AllChonkImg.slimChonk\n          resultString = \"You're pretty slonky, have a burger!\"\n          break\n        }\n        case \"normal\": {\n          chonks = AllChonkImg.normalChonk\n          resultString = \"You're okay...for now.\"\n          break\n        }\n        case \"fat\": {\n          chonks = AllChonkImg.fatChonk\n          resultString = \"You're getting kind of fat...\"\n          break\n        }\n        case \"tooFat\": {\n          chonks = AllChonkImg.tooFatChonk\n          resultString = \"You're quite the chonker, there!\"\n          break\n        }\n      }\n\n      // getting the random images and avoiding duplicates\n      let randNum = Math.floor(Math.random() * chonks.length)\n      let randChonk = chonks[randNum]\n\n\n      if(resultChonk === randChonk) {\n          calcBmi(event)\n          return\n      }\n\n      setResultChonk(randChonk)\n      setChonkVisibility(\"visibleChonk\")  \n      setBmiText(resultString)\n      setBmiValue(bmi) \n      setText(\"invisibleChonk\")\n    }\n\n\n    // clear button\n    const clear = event => {\n      event.preventDefault()\n      setHeight(0)\n      setWeight(0)\n      setBmiValue(\"\")\n      setChonkVisibility(\"invisibleChonk\")\n      setHeightErr(\"\") \n      setWeightErr(\"\")\n      setText(\"visibleChonk\")\n    }\n\n    return ( \n      <main>\n        <section id=\"container\"> \n          <h2>Calculate Your Body Mass Index</h2>\n            <form>\n              <div className=\"unit\">Height (95cm-220cm)</div>\n                <input \n                  type=\"number\" \n                  name=\"height\" \n                  step=\"0.5\" \n                  min={minHeight} \n                  max={maxHeight} \n                  value={height}\n                  onChange={handleHeightChange}\n                  onKeyPress={handleKeyPress.bind(this, 'height')}\n                />\n                <div className=\"error\">{heightErr}</div>\n                <Slider \n                  className=\"slider\"\n                  min={minHeight} \n                  max={maxHeight} \n                  step={0.5} \n                  value={height} \n                  onChange={handleHeightSliderChange}\n                />                \n\n        \n                <br />\n            \n                <div className=\"unit\">Weight (10kg-300kg)</div>\n                  <input \n                    type=\"number\" \n                    name=\"weight\" \n                    step=\"0.5\" \n                    placeholder=\"kg\" \n                    min={minWeight} \n                    max={maxWeight} \n                    value={weight} \n                    onChange={handleWeightChange}\n                    onKeyPress={handleKeyPress.bind(this, 'weight')}\n                 />\n                <div className=\"error\">{weightErr}</div>\n                <Slider\n                  className=\"slider\"\n                  min={minWeight} \n                  max={maxWeight} \n                  step={0.5} \n                  value={weight} \n                  onChange={handleWeightSliderChange}\n                />\n\n               \n                <br />\n        \n              <div id=\"buttons-container\">\n               <button \n                  className=\"button\" \n                  onClick={event => {\n                    event.preventDefault()\n                    calcBmi()\n                  }}\n                  >Calculate\n                </button>\n                \n                <br />\n\n                <button className=\"button\" onClick={clear}>Clear</button>\n              </div>\n\n                <br />\n\n            </form>\n              <div className={chonkVisibility}>\n                <img src={resultChonk} alt=\"pictures of cats is various sizes\" />\n                <div id=\"result-top-text\">\n                  <p>Your current BMI is {bmiValue}</p>\n                </div>\n                <div id=\"bmi-text\">{bmiText}</div>\n              </div>\n              <h3 className={text}>\n                Body mass index, abbreviated BMI, is a key index for relating weight to height. \n                <p>BMI is a person's weight in kilograms (kg) divided by his or her height in meters squared.</p>\n                \n                The National Institutes of Health (NIH) now defines normal weight, overweight, and obesity according to \n                BMI rather than the traditional height/weight charts.\n                <ul>\n                  <li>Overweight is a BMI of 25–29.9.</li>\n                  <li>Obesity is a BMI of 30 or more. A very muscular person might have a high BMI without health risks.</li>\n                </ul>\n            </h3>\n            <div id=\"scale\">\n              <img src=\"imgur.com/a/chlRabm\"/>\n            </div>\n          </section>\n      </main>\n    )\n  }\n   \n  export default App\n\n\n\n\n   "]},"metadata":{},"sourceType":"module"}