{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/projektek/bmi/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      height: 0,\n      weight: 0,\n      heightErr: \"\",\n      weightErr: \"\",\n      bmiValue: \"\",\n      bmiText: \"\",\n      chonkVisibility: \"invisibleChonk\",\n      resultChonk: \"\",\n      AllChonkImg: {\n        slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n        normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/4.jpg\", \"./images/normal/5.jpg\"],\n        fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n        tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\", \"./images/2chonk/5.jpg\"]\n      }\n    };\n    this.calcBmi = this.calcBmi.bind(this);\n  }\n\n  handleHeightChange(event) {\n    //spinner\n    this.setState({\n      height: event.target.value\n    });\n  }\n\n  handleWeightChange(event) {\n    //spinner\n    this.setState({\n      weight: event.target.value\n    });\n  }\n\n  handleHeightSliderChange(value) {\n    //range\n    this.setState({\n      height: value\n    });\n  }\n\n  handleWeightSliderChange(value) {\n    //range\n    this.setState({\n      weight: value\n    });\n  } //limiting input to numbers\n\n\n  handleKeyPress(source, event) {\n    const allowedChars = \".0123456789\";\n    const currentChar = event.key;\n    let found = false;\n\n    for (let i = 0; i < allowedChars.length; i++) {\n      if (currentChar === allowedChars[i]) {\n        found = true;\n      }\n    }\n\n    if (found === false) {\n      event.preventDefault();\n      return;\n    } //limiting number input in height/weight\n\n\n    let currentValue = 0;\n\n    if (source === 'height') {\n      currentValue = parseInt(this.state.height + currentChar);\n\n      if (currentValue > 220) {\n        event.preventDefault();\n      }\n    } else {\n      currentValue = this.state.weight + currentChar;\n\n      if (currentValue > 300) {\n        event.preventDefault();\n      }\n    }\n  } //classifying the results w/images, calculating BMI\n\n\n  classifyResult(result) {\n    if (result < 18.5) {\n      return \"slim\";\n    }\n\n    if (result <= 24.9) {\n      return \"normal\";\n    }\n\n    if (result <= 29.9) {\n      return \"fat\";\n    }\n\n    return \"tooFat\";\n  } //height, weight validation and min/max manual input nrs \n\n\n  validate() {\n    this.setState({\n      heightErr: \"\",\n      weightErr: \"\"\n    });\n    let heightErrStr = \"\";\n    let weightErrStr = \"\"; //error messageges for H/W\n\n    if (!this.state.height) {\n      heightErrStr = \"enter height\";\n    } else if (this.state.height < 95) {\n      heightErrStr = \"greater than 95\";\n    }\n\n    if (!this.state.weight) {\n      weightErrStr = \"enter weight\";\n    } else if (this.state.weight < 10) {\n      weightErrStr = \"greater than 10\";\n    }\n\n    if (heightErrStr || weightErrStr) {\n      this.setState({\n        heightErr: heightErrStr,\n        weightErr: weightErrStr\n      });\n      return false;\n    }\n\n    return true;\n  }\n\n  calcBmi(event) {\n    if (!this.validate()) {\n      return;\n    }\n\n    let bmi = (this.state.weight / (this.state.height / 100 * this.state.height / 100)).toFixed(1);\n    let chonks = null;\n    let resultString = \"\";\n\n    switch (this.classifyResult(bmi)) {\n      case \"slim\":\n        {\n          chonks = this.state.AllChonkImg.slimChonk;\n          resultString = \"You're pretty slonky, have a burger\";\n          break;\n        }\n\n      case \"normal\":\n        {\n          chonks = this.state.AllChonkImg.normalChonk;\n          resultString = \"You're okay...for now\";\n          break;\n        }\n\n      case \"fat\":\n        {\n          chonks = this.state.AllChonkImg.fatChonk;\n          resultString = \"You're getting kind of fat\";\n          break;\n        }\n\n      case \"tooFat\":\n        {\n          chonks = this.state.AllChonkImg.tooFatChonk;\n          resultString = \"You're quite the chonker, there\";\n          break;\n        }\n    } //gettind the random images and avoiding duplicates\n\n\n    const randNum = Math.floor(Math.random() * chonks.length);\n    const randChonk = chonks[randNum];\n\n    if (this.state.resultChonk === randChonk) {\n      this.calcBmi(event);\n      return;\n    }\n\n    this.setState({\n      resultChonk: randChonk\n    });\n    this.setState({\n      chonkVisibility: \"visibleChonk\"\n    });\n    this.setState({\n      bmiText: resultString\n    });\n    this.setState({\n      bmiValue: bmi\n    });\n  } // clear button\n\n\n  clear(event) {\n    event.preventDefault();\n    this.setState({\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\"\n    });\n    this.setState({\n      chonkVisibility: \"invisibleChonk\"\n    });\n    this.setState({\n      heightErr: \"\",\n      weightErr: \"\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, \"BMI Calculator\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      div: \"height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, \"Height (95cm-220cm)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"height\",\n      step: \"0.1\",\n      placeholder: \"cm\",\n      min: \"95\",\n      max: \"220\",\n      value: this.state.height,\n      onChange: this.handleHeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'height'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }\n    }, this.state.heightErr), /*#__PURE__*/React.createElement(Slider, {\n      min: 95,\n      max: 220,\n      step: 0.1,\n      value: this.state.height,\n      onChange: this.handleHeightSliderChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"weight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 16\n      }\n    }, \"Weight (10kg-300kg)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"weight\",\n      step: \"0.1\",\n      placeholder: \"kg\",\n      min: \"10\",\n      max: \"300\",\n      value: this.state.weight,\n      onChange: this.handleWeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'weight'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }\n    }, this.state.weightErr), /*#__PURE__*/React.createElement(Slider, {\n      min: 10,\n      max: 300,\n      step: 0.1,\n      value: this.state.weight,\n      onChange: this.handleWeightSliderChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"calculate\",\n      onClick: event => {\n        event.preventDefault();\n        this.calcBmi();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 8\n      }\n    }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"clear\",\n      onClick: this.clear.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.chonkVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.resultChonk,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"result-top-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 7\n      }\n    }, \"Your BMI result is \", this.state.bmiValue), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"bmi-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 7\n      }\n    }, this.state.bmiText))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sebestyenboglarka/projektek/bmi/src/App.js"],"names":["React","Slider","App","Component","constructor","state","height","weight","heightErr","weightErr","bmiValue","bmiText","chonkVisibility","resultChonk","AllChonkImg","slimChonk","normalChonk","fatChonk","tooFatChonk","calcBmi","bind","handleHeightChange","event","setState","target","value","handleWeightChange","handleHeightSliderChange","handleWeightSliderChange","handleKeyPress","source","allowedChars","currentChar","key","found","i","length","preventDefault","currentValue","parseInt","classifyResult","result","validate","heightErrStr","weightErrStr","bmi","toFixed","chonks","resultString","randNum","Math","floor","random","randChonk","clear","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css'\n\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      height: 0,\n      weight: 0,\n      heightErr: \"\",\n      weightErr: \"\",\n      bmiValue: \"\",\n      bmiText: \"\",\n      chonkVisibility : \"invisibleChonk\",\n      resultChonk: \"\",\n      AllChonkImg: {\n        slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n        normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/4.jpg\", \"./images/normal/5.jpg\"],\n        fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n        tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\", \"./images/2chonk/5.jpg\"]\n      }\n      \n    }\n\n\n    this.calcBmi = this.calcBmi.bind(this)\n  }\n\n\n  handleHeightChange(event) { //spinner\n        this.setState({ height: event.target.value})\n  }\n\n  handleWeightChange(event) { //spinner\n        this.setState({ weight: event.target.value})\n  }\n\n  handleHeightSliderChange(value) { //range\n        this.setState({ height: value})\n  }\n\n  handleWeightSliderChange(value) { //range\n        this.setState({ weight: value})\n  }\n  \n\n\n  //limiting input to numbers\n  handleKeyPress(source, event) {\n      const allowedChars = \".0123456789\"\n      const currentChar = event.key\n      let found = false\n      for (let i = 0;  i < allowedChars.length; i++) {\n        if (currentChar === allowedChars[i]) {\n          found = true\n        }\n      }\n      if(found === false) {\n        event.preventDefault()\n        return\n      }\n\n    //limiting number input in height/weight\n    let currentValue = 0   \n          if (source === 'height') {\n            currentValue = parseInt(this.state.height + currentChar)\n            if (currentValue > 220) {\n              event.preventDefault()\n            }\n          } else {\n            currentValue = this.state.weight + currentChar\n            if (currentValue > 300) {\n              event.preventDefault()\n            }\n          }\n  }\n\n\n    //classifying the results w/images, calculating BMI\n    classifyResult(result) {\n        if (result < 18.5) {\n            return \"slim\"\n        }\n        if (result <= 24.9) {\n          return \"normal\"\n        }\n        if (result <= 29.9) {\n          return \"fat\"\n        }\n        return \"tooFat\"\n    }\n\n    //height, weight validation and min/max manual input nrs \n    validate() {\n      this.setState({heightErr: \"\", weightErr: \"\"})\n\n      let heightErrStr = \"\"\n      let weightErrStr = \"\"\n\n\n      //error messageges for H/W\n      if(!this.state.height) {\n        heightErrStr = \"enter height\"\n      } else if(this.state.height < 95) {\n        heightErrStr = \"greater than 95\"\n      } \n      \n        \n      if(!this.state.weight) {\n        weightErrStr = \"enter weight\"\n      } else if(this.state.weight < 10) {\n         weightErrStr = \"greater than 10\"\n      } \n      \n      \n    \n     if(heightErrStr || weightErrStr) { \n        this.setState({heightErr: heightErrStr, weightErr: weightErrStr}) \n        return false \n      }\n      return true \n  }\n  \n\n    calcBmi(event) {\n      if(!this.validate()) {\n        return \n      }\n\n     \n      let bmi = (this.state.weight / (this.state.height/100 * this.state.height/100)).toFixed(1)\n      let chonks = null\n      let resultString = \"\"\n\n\n      switch (this.classifyResult(bmi)) {\n        case \"slim\": {\n          chonks = this.state.AllChonkImg.slimChonk\n          resultString = \"You're pretty slonky, have a burger\"\n          break\n        }\n        case \"normal\": {\n          chonks = this.state.AllChonkImg.normalChonk\n          resultString = \"You're okay...for now\"\n          break\n        }\n        case \"fat\": {\n          chonks = this.state.AllChonkImg.fatChonk\n          resultString = \"You're getting kind of fat\"\n          break\n        }\n        case \"tooFat\": {\n          chonks = this.state.AllChonkImg.tooFatChonk\n          resultString = \"You're quite the chonker, there\"\n          break\n        }\n      }\n\n      //gettind the random images and avoiding duplicates\n      const randNum = Math.floor(Math.random() * chonks.length)\n      const randChonk = chonks[randNum]\n\n\n      if(this.state.resultChonk === randChonk) {\n          this.calcBmi(event)\n          return\n      }\n\n      this.setState({resultChonk: randChonk})\n      this.setState({chonkVisibility: \"visibleChonk\" })  \n      this.setState({bmiText: resultString})\n      this.setState({bmiValue: bmi}) \n  }\n\n\n    // clear button\n    clear(event) {\n      event.preventDefault()\n      this.setState({ height: \"\", weight: \"\", bmiValue: \"\" })\n      this.setState({ chonkVisibility: \"invisibleChonk\" })\n      this.setState({ heightErr: \"\", weightErr: \"\" })\n    }\n\n\n  render() {\n    return ( \n      <main>\n        <section id=\"container\"> \n          <h2>BMI Calculator</h2>\n            <form>\n              <p div=\"height\">Height (95cm-220cm)</p>\n                <input \n                  type=\"number\" \n                  name=\"height\" \n                  step=\"0.1\" \n                  placeholder=\"cm\" \n                  min=\"95\" \n                  max=\"220\"\n                  value={this.state.height}\n                  onChange={this.handleHeightChange.bind(this)}\n                  onKeyPress={this.handleKeyPress.bind(this, 'height')}\n                />\n                <div className=\"error\">{this.state.heightErr}</div>\n                <Slider \n                  min={95} \n                  max={220} \n                  step={0.1} \n                  value={this.state.height} \n                  onChange={this.handleHeightSliderChange.bind(this)}\n                />                \n\n        \n         <br />\n            \n               <p id=\"weight\">Weight (10kg-300kg)</p>\n                 <input \n                   type=\"number\" \n                   name=\"weight\" \n                   step=\"0.1\" \n                   placeholder=\"kg\" \n                   min=\"10\" \n                   max=\"300\"\n                   value={this.state.weight} \n                   onChange={this.handleWeightChange.bind(this)}\n                   onKeyPress={this.handleKeyPress.bind(this, 'weight')}\n               />\n                <div className=\"error\">{this.state.weightErr}</div>\n                <Slider\n                  min={10} \n                  max={300} \n                  step={0.1} \n                  value={this.state.weight} \n                  onChange={this.handleWeightSliderChange.bind(this)}\n                />\n\n               \n        <br />\n        \n        \n       <button \n          id=\"calculate\" \n          onClick={(event) => {\n            event.preventDefault()\n            this.calcBmi()\n          }}\n          >Calculate\n        </button>\n\n        \n        <br />\n\n        <button id=\"clear\" onClick={this.clear.bind(this)}>Clear</button>\n\n        <br />\n\n\n\n     </form>\n    <div className={this.state.chonkVisibility}>\n      <img src={this.state.resultChonk} alt=\"\" />\n      <h2 className=\"result-top-text\">Your BMI result is {this.state.bmiValue}</h2>\n      <h2 className=\"bmi-text\">{this.state.bmiText}</h2>\n    </div>\n     \n    </section>\n   </main>\n  )\n }\n}\n\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}