{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/projektek/bmi/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      height: \"\",\n      weight: \"\",\n      result: \"\"\n    };\n  }\n\n  handleHeightChange(event) {\n    this.setState({\n      height: event.target.value\n    });\n  }\n\n  handleWeightChange(event) {\n    this.setState({\n      weight: event.target.value\n    });\n  }\n\n  handleKeyPress(source, event) {\n    const allowedChars = \".0123456789\";\n    const currentChar = event.key;\n    let found = false;\n\n    for (let i = 0; i < allowedChars.length; i++) {\n      if (currentChar === allowedChars[i]) {\n        found = true;\n      }\n    }\n\n    if (found === false) {\n      event.preventDefault();\n      return;\n    } //limiting character input\n\n\n    let currentValue = 0;\n\n    if (source === 'height') {\n      currentValue = parseInt(this.state.height + currentChar);\n\n      if (currentValue > 220) {\n        event.preventDefault();\n      }\n    } else {\n      currentValue = this.state.weight + currentChar;\n\n      if (currentValue > 300) {\n        event.preventDefault();\n      }\n    }\n  } //calculating BMI\n\n\n  handleCalc(event) {}\n  /*  let newHeight = parseFloat(height / 100)\n  //    let bmi = weight / (newHeight * newHeight) */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"BMI Calculator\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      div: \"height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Height (95cm-220cm)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"height\",\n      step: \"0.1\",\n      placeholder: \"cm\",\n      min: \"95\",\n      max: \"220\" // value={this.state.height}\n      ,\n      onChange: this.handleHeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'height'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"weight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 16\n      }\n    }, \"Weight (10kg-300kg)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"weight\",\n      step: \"0.1\",\n      placeholder: \"kg\",\n      min: \"10\",\n      max: \"300\" // value={this.state.weight}\n      ,\n      onChange: this.handleWeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'weight'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"calculate\",\n      onClick: this.handleCalc.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"clear\",\n      onClick: this.handleClear.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"score_one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, \"Result\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"score_two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, \"Your BMI is: \", this.state.result))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sebestyenboglarka/projektek/bmi/src/App.js"],"names":["React","App","Component","constructor","state","height","weight","result","handleHeightChange","event","setState","target","value","handleWeightChange","handleKeyPress","source","allowedChars","currentChar","key","found","i","length","preventDefault","currentValue","parseInt","handleCalc","render","bind","handleClear"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      height: \"\",\n      weight: \"\",\n      result: \"\"\n    }\n  }\n       \n \n  handleHeightChange(event) {\n        this.setState({ height: event.target.value})\n  }\n\n\n  handleWeightChange(event) {\n        this.setState({ weight: event.target.value})\n  }\n\n\n  handleKeyPress(source, event) {\n      const allowedChars = \".0123456789\"\n      const currentChar = event.key\n      let found = false\n      for (let i = 0;  i < allowedChars.length; i++) {\n        if (currentChar === allowedChars[i]) {\n          found = true\n        }\n      }\n      if(found === false) {\n        event.preventDefault()\n        return\n      }\n\n      //limiting character input\n\n      let currentValue = 0;    \n      if (source === 'height') {\n        currentValue = parseInt(this.state.height + currentChar);\n        if (currentValue > 220) {\n          event.preventDefault()\n        }\n      } else {\n        currentValue = this.state.weight + currentChar;\n        if (currentValue > 300) {\n          event.preventDefault()\n        }\n      }\n      \n  }\n\n\n  //calculating BMI\n\n  handleCalc(event) {\n    \n\n\n\n\n  }\n\n\n\n\n\n  /*  let newHeight = parseFloat(height / 100)\n //    let bmi = weight / (newHeight * newHeight) */\n\n\n  \n    \n  \n\n  render() {\n    return ( \n      <main>\n        <section id=\"container\"> \n          <h2>BMI Calculator</h2>\n            <form>\n              <p div=\"height\">Height (95cm-220cm)</p>\n                <input \n                  type=\"number\" \n                  name=\"height\" \n                  step=\"0.1\" \n                  placeholder=\"cm\" \n                  min=\"95\" \n                  max=\"220\"\n                  // value={this.state.height}\n                  onChange={this.handleHeightChange.bind(this)}\n                  onKeyPress={this.handleKeyPress.bind(this, 'height')}\n\n                />\n        \n         <br />\n            \n               <p id=\"weight\">Weight (10kg-300kg)</p>\n                 <input \n                   type=\"number\" \n                   name=\"weight\" \n                   step=\"0.1\" \n                   placeholder=\"kg\" \n                   min=\"10\" \n                   max=\"300\"\n                   // value={this.state.weight}\n                   onChange={this.handleWeightChange.bind(this)}\n                   onKeyPress={this.handleKeyPress.bind(this, 'weight')}\n\n                   \n               />\n        \n          <br />\n        \n        \n        <button id=\"calculate\" onClick={this.handleCalc.bind(this)}>Calculate</button>\n        \n        <br />\n        \n        <button id=\"clear\" onClick={this.handleClear.bind(this)}>Clear</button>\n        \n        <p id=\"score_one\">Result</p>\n        <p id=\"score_two\">Your BMI is: {this.state.result}</p>\n\n\n     </form>\n    </section>\n   </main>\n  )\n }\n}\n\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}