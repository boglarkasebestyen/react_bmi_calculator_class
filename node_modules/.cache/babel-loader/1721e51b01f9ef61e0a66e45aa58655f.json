{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/projektek/bmi/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport chonk from './images/default_chonk.jpg';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\",\n      defaultChonk: chonk,\n      AllChonkImg: []\n    };\n  }\n\n  handleHeightChange(event) {\n    this.setState({\n      height: event.target.value\n    });\n  }\n\n  handleWeightChange(event) {\n    this.setState({\n      weight: event.target.value\n    });\n  } //limiting input to numbers\n\n\n  handleKeyPress(source, event) {\n    const allowedChars = \".0123456789\";\n    const currentChar = event.key;\n    let found = false;\n\n    for (let i = 0; i < allowedChars.length; i++) {\n      if (currentChar === allowedChars[i]) {\n        found = true;\n      }\n    }\n\n    if (found === false) {\n      event.preventDefault();\n      return;\n    } //limiting number input /height/weight\n\n\n    let currentValue = 0;\n\n    if (source === 'height') {\n      currentValue = parseInt(this.state.height + currentChar);\n\n      if (currentValue > 220) {\n        event.preventDefault();\n      }\n    } else {\n      currentValue = this.state.weight + currentChar;\n\n      if (currentValue > 300) {\n        event.preventDefault();\n      }\n    }\n  } //calculating BMI and classifying the results\n\n\n  calcBmi(event) {\n    event.preventDefault();\n    let bmi = (this.state.weight / (this.state.height / 100 * this.state.height / 100)).toFixed(1);\n    this.setState({\n      bmiValue: bmi\n    });\n    if (this.state.bmiValue < 18.5) console.log(this.state.bmiValue);\n    if (this.state.bmiValue >= 18.5 && this.state.bmiValue <= 24.9) console.log(this.state.bmiValue);\n    if (this.state.bmiValue >= 25 && this.state.bmiValue <= 29.9) console.log(this.state.bmiValue);\n    if (this.state.bmiValue >= 30) console.log(this.state.bmiValue);\n  } // clear button\n\n\n  clearBmi(event) {\n    event.preventDefault();\n    this.setState({\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\"\n    });\n  } // fetching images from api\n\n\n  componentDidMount() {\n    fetch(\"https://api.imgflip.com/get_memes\").then(response => response.json()).then(response => {\n      const {\n        cats\n      } = response.data;\n      this.setState({\n        AllChonkImg: cats\n      });\n    });\n  } // randomizing the images\n\n\n  handleChonk(event) {\n    event.preventDefault();\n    const randNum = Math.floor(Math.random() * this.state.AllChonkImg.length);\n    const randChonk = this.state.AllChonkImg[randNum].url;\n    this.setState({\n      default_chonk: randChonk\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, \"BMI Calculator\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      div: \"height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }\n    }, \"Height (95cm-220cm)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"height\",\n      step: \"0.1\",\n      placeholder: \"cm\",\n      min: \"95\",\n      max: \"220\",\n      value: this.state.height //kell?\n      ,\n      onChange: this.handleHeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'height'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"weight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 16\n      }\n    }, \"Weight (10kg-300kg)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"weight\",\n      step: \"0.1\",\n      placeholder: \"kg\",\n      min: \"10\",\n      max: \"300\",\n      value: this.state.weight // kell?\n      ,\n      onChange: this.handleWeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'weight'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"calculate\",\n      onClick: this.calcBmi.bind(this),\n      onPoop: this.handleChonk.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"clear\",\n      onClick: this.clearBmi.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"score_one\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, \"Result\"), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"score_two\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, \"...\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sebestyenboglarka/projektek/bmi/src/App.js"],"names":["React","chonk","App","Component","constructor","state","height","weight","bmiValue","defaultChonk","AllChonkImg","handleHeightChange","event","setState","target","value","handleWeightChange","handleKeyPress","source","allowedChars","currentChar","key","found","i","length","preventDefault","currentValue","parseInt","calcBmi","bmi","toFixed","console","log","clearBmi","componentDidMount","fetch","then","response","json","cats","data","handleChonk","randNum","Math","floor","random","randChonk","url","default_chonk","render","bind"],"mappings":"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","sourcesContent":["import React from 'react'   \nimport './App.css'\nimport chonk from './images/default_chonk.jpg'\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\",\n      defaultChonk: chonk,\n      AllChonkImg: []\n\n    }\n  }\n\n\n  handleHeightChange(event) {\n        this.setState({ height: event.target.value})\n  }\n\n\n  handleWeightChange(event) {\n        this.setState({ weight: event.target.value})\n  }\n\n    //limiting input to numbers\n\n  handleKeyPress(source, event) {\n      const allowedChars = \".0123456789\"\n      const currentChar = event.key\n      let found = false\n      for (let i = 0;  i < allowedChars.length; i++) {\n        if (currentChar === allowedChars[i]) {\n          found = true\n        }\n      }\n      if(found === false) {\n        event.preventDefault()\n        return\n      }\n\n      //limiting number input /height/weight\n    let currentValue = 0   \n          if (source === 'height') {\n            currentValue = parseInt(this.state.height + currentChar);\n            if (currentValue > 220) {\n              event.preventDefault()\n            }\n          } else {\n            currentValue = this.state.weight + currentChar;\n            if (currentValue > 300) {\n              event.preventDefault()\n            }\n          }\n\n      \n  }\n\n\n  //calculating BMI and classifying the results\n  \n    calcBmi(event) {\n      event.preventDefault()\n\n      let bmi=(this.state.weight / (this.state.height/100 * this.state.height/100)).toFixed(1)\n      this.setState({bmiValue: bmi}) \n\n      if(this.state.bmiValue < 18.5)\n        console.log(this.state.bmiValue)\n      if(this.state.bmiValue >= 18.5 && this.state.bmiValue <= 24.9) \n        console.log(this.state.bmiValue)\n      if(this.state.bmiValue >= 25 && this.state.bmiValue <= 29.9) \n        console.log(this.state.bmiValue)\n      if(this.state.bmiValue >= 30) \n        console.log(this.state.bmiValue)\n    }\n\n\n    // clear button\n\n    clearBmi(event) {\n      event.preventDefault()\n      this.setState({height: \"\", weight: \"\", bmiValue: \"\"})\n    }\n\n\n\n    // fetching images from api\n    componentDidMount() {\n        fetch(\"https://api.imgflip.com/get_memes\")\n            .then(response => response.json())\n            .then(response => {\n                const {cats} = response.data\n                this.setState({ AllChonkImg: cats })\n            })\n    }\n\n    // randomizing the images\n    handleChonk(event) {\n      event.preventDefault()\n      const randNum = Math.floor(Math.random() * this.state.AllChonkImg.length)\n      const randChonk = this.state.AllChonkImg[randNum].url\n        this.setState({ default_chonk: randChonk })\n    }\n   \n\n\n  render() {\n    return ( \n      <main>\n        <section id=\"container\"> \n          <h2>BMI Calculator</h2>\n            <form>\n              <p div=\"height\">Height (95cm-220cm)</p>\n                <input \n                  type=\"number\" \n                  name=\"height\" \n                  step=\"0.1\" \n                  placeholder=\"cm\" \n                  min=\"95\" \n                  max=\"220\"\n                  value={this.state.height}//kell?\n                  onChange={this.handleHeightChange.bind(this)}\n                  onKeyPress={this.handleKeyPress.bind(this, 'height')}\n\n                />\n        \n         <br />\n            \n               <p id=\"weight\">Weight (10kg-300kg)</p>\n                 <input \n                   type=\"number\" \n                   name=\"weight\" \n                   step=\"0.1\" \n                   placeholder=\"kg\" \n                   min=\"10\" \n                   max=\"300\"\n                   value={this.state.weight} // kell?\n                   onChange={this.handleWeightChange.bind(this)}\n                   onKeyPress={this.handleKeyPress.bind(this, 'weight')}\n\n               />\n        \n          <br />\n        \n        \n        <button \n          id=\"calculate\" \n          onClick={this.calcBmi.bind(this)}\n          onPoop={this.handleChonk.bind(this)}\n\n          >Calculate\n        </button>\n        \n        <br />\n\n        <button id=\"clear\" onClick={this.clearBmi.bind(this)}>Clear</button>\n\n        \n        <p id=\"score_one\">Result</p>\n        <p id=\"score_two\">...</p>\n\n\n\n     </form>\n     \n    </section>\n   </main>\n  )\n }\n}\n\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}