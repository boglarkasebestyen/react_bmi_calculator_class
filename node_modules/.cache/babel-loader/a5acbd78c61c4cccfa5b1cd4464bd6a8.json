{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/projektek/bmi/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Slider from 'react-rangeslider';\nimport 'react-rangeslider/lib/index.css';\nexport default function App() {\n  let [height, setHeight] = useState(0);\n  let [weight, setWeight] = useState(0);\n  let [heightErr, setHeightErr] = useState(\"\");\n  let [weightErr, setWeightErr] = useState(\"\");\n  let [bmiValue, setBmiValue] = useState(\"\");\n  let [bmiText, setBmiText] = useState(\"\");\n  let [chonkVisibility, setChonkVisibility] = useState(\"invisibleChonk\");\n  let [resultChonk, setResultChonk] = useState(\"\");\n  let AllChonkImg = {\n    slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n    normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/4.jpg\", \"./images/normal/5.jpg\"],\n    fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n    tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\", \"./images/2chonk/5.jpg\"]\n  };\n\n  const handleHeightChange = event => {\n    //spinner\n    setHeight(event.target.value);\n  };\n\n  const handleWeightChange = event => {\n    //spinner\n    setWeight(event.target.value);\n  };\n\n  const handleHeightSliderChange = value => {\n    //range\n    setHeight(value);\n  };\n\n  const handleWeightSliderChange = value => {\n    //range\n    setWeight(value);\n  }; //limiting input to numbers\n\n\n  const handleKeyPress = (source, event) => {\n    let allowedChars = \".0123456789\";\n    let currentChar = event.key;\n    let found = false;\n\n    for (let i = 0; i < allowedChars.length; i++) {\n      if (currentChar === allowedChars[i]) {\n        found = true;\n      }\n    }\n\n    if (found === false) {\n      event.preventDefault();\n      return;\n    } //limiting number input in height/weight\n\n\n    let currentValue = 0;\n\n    if (source === 'height') {\n      currentValue = parseInt(height + currentChar);\n\n      if (currentValue > 220) {\n        event.preventDefault();\n      }\n    } else {\n      currentValue = weight + currentChar;\n\n      if (currentValue > 300) {\n        event.preventDefault();\n      }\n    } // }\n    //classifying the results w/images, calculating BMI\n\n\n    const classifyResult = result => {\n      if (result < 18.5) {\n        return \"slim\";\n      }\n\n      if (result <= 24.9) {\n        return \"normal\";\n      }\n\n      if (result <= 29.9) {\n        return \"fat\";\n      }\n\n      return \"tooFat\";\n    }; //height, weight validation and min/max manual input nrs \n\n\n    const validate = () => {\n      setHeightErr(\"\");\n      setWeightErr(\"\");\n      let heightErrStr = \"\";\n      let weightErrStr = \"\"; //error messageges for H/W\n\n      if (!height) {\n        heightErrStr = \"enter height\";\n      }\n\n      if (height < 95) {\n        heightErrStr = \"greater than 95\";\n      } else if (height > 220) {\n        heightErrStr = \"less than 220\";\n      }\n\n      if (!weight) {\n        weightErrStr = \"enter weight\";\n      }\n\n      if (weight < 10) {\n        weightErrStr = \"greater than 10\";\n      } else if (weight > 300) {\n        weightErrStr = \"less than 300\";\n      }\n\n      if (heightErrStr || weightErrStr) {\n        setHeightErr(heightErrStr);\n        setWeightErr(weightErrStr);\n        return false;\n      }\n\n      return true;\n    };\n\n    const calcBmi = event => {\n      if (!validate()) {\n        return;\n      }\n\n      let bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n      let chonks = null;\n      let resultString = \"\";\n\n      switch (classifyResult(bmi)) {\n        case \"slim\":\n          {\n            chonks = AllChonkImg.slimChonk;\n            resultString = \"You're pretty slonky, have a burger\";\n            break;\n          }\n\n        case \"normal\":\n          {\n            chonks = AllChonkImg.normalChonk;\n            resultString = \"You're okay...for now\";\n            break;\n          }\n\n        case \"fat\":\n          {\n            chonks = AllChonkImg.fatChonk;\n            resultString = \"You're getting kind of fat\";\n            break;\n          }\n\n        case \"tooFat\":\n          {\n            chonks = AllChonkImg.tooFatChonk;\n            resultString = \"You're quite the chonker, there\";\n            break;\n          }\n      } //gettind the random images and avoiding duplicates\n\n\n      let randNum = Math.floor(Math.random() * chonks.length);\n      let randChonk = chonks[randNum];\n\n      if (resultChonk === randChonk) {\n        calcBmi(event);\n        return;\n      }\n\n      setResultChonk(randChonk);\n      setChonkVisibility(\"visibleChonk\");\n      setBmiText(resultString);\n      setBmiValue(bmi);\n    }; // clear button\n\n\n    const clear = event => {\n      event.preventDefault();\n      setHeight(\"\");\n      setWeight(\"\");\n      setBmiValue(\"\");\n      setChonkVisibility(\"invisibleChonk\");\n      setHeightErr(\"\");\n      setWeightErr(\"\");\n    };\n  };\n\n  return /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    id: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, \"BMI Calculator\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    div: \"height\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }, \"Height (95cm-220cm)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"height\",\n    step: \"0.1\",\n    placeholder: \"cm\",\n    min: \"95\",\n    max: \"220\",\n    value: height,\n    onChange: handleHeightChange,\n    onKeyPress: handleKeyPress.bind(this, 'height'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, heightErr), /*#__PURE__*/React.createElement(Slider, {\n    min: 95,\n    max: 220,\n    step: 0.1,\n    value: height,\n    onChange: handleHeightSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 16\n    }\n  }, \"Weight (10kg-300kg)\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"weight\",\n    step: \"0.1\",\n    placeholder: \"kg\",\n    min: \"10\",\n    max: \"300\",\n    value: weight,\n    onChange: handleWeightChange,\n    onKeyPress: handleKeyPress.bind(this, 'weight'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 18\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }, weightErr), /*#__PURE__*/React.createElement(Slider, {\n    min: 10,\n    max: 300,\n    step: 0.1,\n    value: weight,\n    onChange: handleWeightSliderChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"calculate\",\n    onClick: event => {\n      event.preventDefault();\n      calcBmi;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 8\n    }\n  }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"clear\",\n    onClick: clear,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: chonkVisibility,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: resultChonk,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"result-top-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }\n  }, \"Your BMI result is \", bmiValue), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"bmi-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, bmiText))));\n}","map":{"version":3,"sources":["/Users/sebestyenboglarka/projektek/bmi/src/App.js"],"names":["React","useState","useEffect","Slider","App","height","setHeight","weight","setWeight","heightErr","setHeightErr","weightErr","setWeightErr","bmiValue","setBmiValue","bmiText","setBmiText","chonkVisibility","setChonkVisibility","resultChonk","setResultChonk","AllChonkImg","slimChonk","normalChonk","fatChonk","tooFatChonk","handleHeightChange","event","target","value","handleWeightChange","handleHeightSliderChange","handleWeightSliderChange","handleKeyPress","source","allowedChars","currentChar","key","found","i","length","preventDefault","currentValue","parseInt","classifyResult","result","validate","heightErrStr","weightErrStr","calcBmi","bmi","toFixed","chonks","resultString","randNum","Math","floor","random","randChonk","clear","bind"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport './App.css'\nimport Slider from 'react-rangeslider'\nimport 'react-rangeslider/lib/index.css'\n\n\n\n\nexport default function App()  {\n  let [height, setHeight] = useState(0)\n  let [weight, setWeight] = useState(0)\n  let [heightErr, setHeightErr] = useState(\"\")\n  let [weightErr, setWeightErr] = useState(\"\")\n  let [bmiValue, setBmiValue] = useState(\"\")\n  let [bmiText, setBmiText] = useState(\"\")\n  let [chonkVisibility, setChonkVisibility] = useState(\"invisibleChonk\")\n  let [resultChonk, setResultChonk] = useState(\"\")\n  let AllChonkImg = {\n    slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n    normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/4.jpg\", \"./images/normal/5.jpg\"],\n    fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n    tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\", \"./images/2chonk/5.jpg\"]\n  }\n\n\n  const handleHeightChange = event => { //spinner\n        setHeight(event.target.value)\n  }\n\n  const handleWeightChange = event => { //spinner\n        setWeight(event.target.value)\n  }\n\n  const handleHeightSliderChange = value => { //range\n       setHeight(value)\n  }\n\n  const handleWeightSliderChange = value => { //range\n        setWeight(value)\n  }\n  \n\n\n  //limiting input to numbers\n  const handleKeyPress = (source, event) => {\n      let allowedChars = \".0123456789\"\n      let currentChar = event.key\n      let found = false\n      for (let i = 0;  i < allowedChars.length; i++) {\n        if (currentChar === allowedChars[i]) {\n          found = true\n        }\n      }\n      if(found === false) {\n        event.preventDefault()\n        return\n      }\n\n    //limiting number input in height/weight\n    let currentValue = 0   \n          if (source === 'height') {\n            currentValue = parseInt(height + currentChar)\n            if (currentValue > 220) {\n              event.preventDefault()\n            }\n          } else {\n            currentValue = weight + currentChar\n            if (currentValue > 300) {\n              event.preventDefault()\n            }\n          }\n  // }\n\n\n    //classifying the results w/images, calculating BMI\n    const classifyResult = result => {\n        if (result < 18.5) {\n            return \"slim\"\n        }\n        if (result <= 24.9) {\n          return \"normal\"\n        }\n        if (result <= 29.9) {\n          return \"fat\"\n        }\n        return \"tooFat\"\n    }\n\n    //height, weight validation and min/max manual input nrs \n    const validate = () => {\n      setHeightErr(\"\")\n      setWeightErr(\"\")\n\n      let heightErrStr = \"\"\n      let weightErrStr = \"\"\n\n\n      //error messageges for H/W\n      if(!height) {\n        heightErrStr = \"enter height\"\n      } \n      if(height < 95) {\n        heightErrStr = \"greater than 95\"\n      } else if(height > 220) {\n          heightErrStr = \"less than 220\"\n      }\n        \n        \n      if(!weight) {\n        weightErrStr = \"enter weight\"\n      } \n      if(weight < 10) {\n         weightErrStr = \"greater than 10\"\n      } else if(weight > 300) {\n         weightErrStr = \"less than 300\"\n      }\n\n    \n     if(heightErrStr || weightErrStr) { \n        setHeightErr(heightErrStr)\n        setWeightErr(weightErrStr)\n        return false \n      }\n      return true \n    }\n  \n\n    const calcBmi = event => {\n      if(!validate()) {\n        return \n      }\n\n     \n      let bmi = (weight / (height/100 * height/100)).toFixed(1)\n      let chonks = null\n      let resultString = \"\"\n\n\n      switch (classifyResult(bmi)) {\n        case \"slim\": {\n          chonks = AllChonkImg.slimChonk\n          resultString = \"You're pretty slonky, have a burger\"\n          break\n        }\n        case \"normal\": {\n          chonks = AllChonkImg.normalChonk\n          resultString = \"You're okay...for now\"\n          break\n        }\n        case \"fat\": {\n          chonks = AllChonkImg.fatChonk\n          resultString = \"You're getting kind of fat\"\n          break\n        }\n        case \"tooFat\": {\n          chonks = AllChonkImg.tooFatChonk\n          resultString = \"You're quite the chonker, there\"\n          break\n        }\n      }\n\n      //gettind the random images and avoiding duplicates\n      let randNum = Math.floor(Math.random() * chonks.length)\n      let randChonk = chonks[randNum]\n\n\n      if(resultChonk === randChonk) {\n          calcBmi(event)\n          return\n      }\n\n      setResultChonk(randChonk)\n      setChonkVisibility(\"visibleChonk\")  \n      setBmiText(resultString)\n      setBmiValue(bmi) \n    }\n\n\n    // clear button\n    const clear = event => {\n      event.preventDefault()\n      setHeight(\"\")\n      setWeight(\"\")\n      setBmiValue(\"\")\n      setChonkVisibility(\"invisibleChonk\")\n      setHeightErr(\"\") \n      setWeightErr(\"\")\n    }\n}\n\n\n\n\n    return ( \n      <main>\n        <section id=\"container\"> \n          <h2>BMI Calculator</h2>\n            <form>\n              <p div=\"height\">Height (95cm-220cm)</p>\n                <input \n                  type=\"number\" \n                  name=\"height\" \n                  step=\"0.1\" \n                  placeholder=\"cm\" \n                  min=\"95\" \n                  max=\"220\"\n                  value={height}\n                  onChange={handleHeightChange}\n                  onKeyPress={handleKeyPress.bind(this, 'height')}\n                />\n                <div className=\"error\">{heightErr}</div>\n                <Slider \n                  min={95} \n                  max={220} \n                  step={0.1} \n                  value={height} \n                  onChange={handleHeightSliderChange}\n                />                \n\n        \n         <br />\n            \n               <p id=\"weight\">Weight (10kg-300kg)</p>\n                 <input \n                   type=\"number\" \n                   name=\"weight\" \n                   step=\"0.1\" \n                   placeholder=\"kg\" \n                   min=\"10\" \n                   max=\"300\"\n                   value={weight} \n                   onChange={handleWeightChange}\n                   onKeyPress={handleKeyPress.bind(this, 'weight')}\n               />\n                <div className=\"error\">{weightErr}</div>\n                <Slider\n                  min={10} \n                  max={300} \n                  step={0.1} \n                  value={weight} \n                  onChange={handleWeightSliderChange}\n                />\n\n               \n        <br />\n        \n        \n       <button \n          id=\"calculate\" \n          onClick={event => {\n            event.preventDefault()\n            calcBmi\n          }}\n          >Calculate\n        </button>\n\n        \n        <br />\n\n        <button id=\"clear\" onClick={clear}>Clear</button>\n\n        <br />\n\n\n\n     </form>\n    <div className={chonkVisibility}>\n      <img src={resultChonk} alt=\"\" />\n      <h2 className=\"result-top-text\">Your BMI result is {bmiValue}</h2>\n      <h2 className=\"bmi-text\">{bmiText}</h2>\n    </div>\n     \n    </section>\n   </main>\n  )\n}\n \n\n\n\n\n "]},"metadata":{},"sourceType":"module"}