{"ast":null,"code":"var _jsxFileName = \"/Users/sebestyenboglarka/projektek/bmi/src/App.js\";\nimport React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\",\n      chonkVisibility: \"invisibleChonk\",\n      resultChonk: \"\",\n      AllChonkImg: {\n        slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n        normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/4.jpg\", \"./images/normal/5.jpg\"],\n        fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n        tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\", \"./images/2chonk/5.jpg\"]\n      }\n    };\n    this.calcBmi = this.calcBmi.bind(this); // this.handleChonk = this.handleChonk.bind(this)\n  }\n\n  handleHeightChange(event) {\n    this.setState({\n      height: event.target.value\n    });\n  }\n\n  handleWeightChange(event) {\n    this.setState({\n      weight: event.target.value\n    });\n  } //limiting input to numbers\n\n\n  handleKeyPress(source, event) {\n    const allowedChars = \".0123456789\";\n    const currentChar = event.key;\n    let found = false;\n\n    for (let i = 0; i < allowedChars.length; i++) {\n      if (currentChar === allowedChars[i]) {\n        found = true;\n      }\n    }\n\n    if (found === false) {\n      event.preventDefault();\n      return;\n    } //limiting number input /height/weight\n\n\n    let currentValue = 0;\n\n    if (source === 'height') {\n      currentValue = parseInt(this.state.height + currentChar);\n\n      if (currentValue > 220) {\n        event.preventDefault();\n      }\n    } else {\n      currentValue = this.state.weight + currentChar;\n\n      if (currentValue > 300) {\n        event.preventDefault();\n      }\n    }\n  } //calculating BMI, classifying the results w/images\n\n\n  calcBmi(event) {\n    let bmi = (this.state.weight / (this.state.height / 100 * this.state.height / 100)).toFixed(1);\n    this.setState({\n      bmiValue: bmi\n    });\n\n    if (this.state.weight === \"\") {\n      return null;\n    }\n\n    if (this.state.height === \"\") {\n      return null;\n    }\n\n    if (this.state.bmiValue < 18.5) {\n      //thin\n      return \"You're slonky\";\n      const randNum = Math.floor(Math.random() * this.state.AllChonkImg.slimChonk.length);\n      const randChonk = this.state.AllChonkImg.slimChonk[randNum];\n      this.setState({\n        resultChonk: randChonk\n      });\n      this.setState({\n        chonkVisibility: \"visibleChonk\"\n      });\n    }\n\n    if (this.state.bmiValue >= 18.5 && this.state.bmiValue <= 24.9) {\n      //normal\n      const randNum = Math.floor(Math.random() * this.state.AllChonkImg.normalChonk.length);\n      const randChonk = this.state.AllChonkImg.normalChonk[randNum];\n      this.setState({\n        resultChonk: randChonk\n      });\n      this.setState({\n        chonkVisibility: \"visibleChonk\"\n      });\n    }\n\n    if (this.state.bmiValue >= 25 && this.state.bmiValue <= 29.9) {\n      //fat\n      const randNum = Math.floor(Math.random() * this.state.AllChonkImg.fatChonk.length);\n      const randChonk = this.state.AllChonkImg.fatChonk[randNum];\n      this.setState({\n        resultChonk: randChonk\n      });\n      this.setState({\n        chonkVisibility: \"visibleChonk\"\n      });\n    }\n\n    if (this.state.bmiValue >= 30) {\n      //obese\n      const randNum = Math.floor(Math.random() * this.state.AllChonkImg.tooFatChonk.length);\n      const randChonk = this.state.AllChonkImg.tooFatChonk[randNum];\n      this.setState({\n        resultChonk: randChonk\n      });\n      this.setState({\n        chonkVisibility: \"visibleChonk\"\n      });\n    }\n  } // clear button\n\n\n  clearBmi(event) {\n    event.preventDefault();\n    this.setState({\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\"\n    });\n    this.setState({\n      chonkVisibility: \"invisibleChonk\"\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      id: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, \"BMI Calculator\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      div: \"height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Height (95cm-220cm)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"height\",\n      step: \"0.1\",\n      placeholder: \"cm\",\n      min: \"95\",\n      max: \"220\",\n      value: this.state.height //kell?\n      ,\n      onChange: this.handleHeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'height'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 10\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      id: \"weight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 16\n      }\n    }, \"Weight (10kg-300kg)\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"weight\",\n      step: \"0.1\",\n      placeholder: \"kg\",\n      min: \"10\",\n      max: \"300\",\n      value: this.state.weight // kell?\n      ,\n      onChange: this.handleWeightChange.bind(this),\n      onKeyPress: this.handleKeyPress.bind(this, 'weight'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"calculate\",\n      onClick: event => {\n        event.preventDefault();\n        this.calcBmi();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 8\n      }\n    }, \"Calculate\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      id: \"clear\",\n      onClick: this.clearBmi.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }\n    }, \"Clear\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.state.chonkVisibility,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.resultChonk,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"result-top-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }\n    }, \"Your BMI result is \", this.state.bmiValue))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sebestyenboglarka/projektek/bmi/src/App.js"],"names":["React","App","Component","constructor","state","height","weight","bmiValue","chonkVisibility","resultChonk","AllChonkImg","slimChonk","normalChonk","fatChonk","tooFatChonk","calcBmi","bind","handleHeightChange","event","setState","target","value","handleWeightChange","handleKeyPress","source","allowedChars","currentChar","key","found","i","length","preventDefault","currentValue","parseInt","bmi","toFixed","randNum","Math","floor","random","randChonk","clearBmi","render"],"mappings":"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","sourcesContent":["import React from 'react'   \nimport './App.css'\n\n\n\nclass App extends React.Component {\n  constructor() {\n    super()\n    this.state = {\n      height: \"\",\n      weight: \"\",\n      bmiValue: \"\",\n      chonkVisibility : \"invisibleChonk\",\n      resultChonk: \"\",\n      AllChonkImg: {\n        slimChonk: [\"./images/slim/1.jpg\", \"./images/slim/2.jpg\", \"./images/slim/3.jpg\", \"./images/slim/4.jpg\"],\n        normalChonk: [\"./images/normal/1.jpg\", \"./images/normal/2.jpg\", \"./images/normal/3.jpg\", \"./images/normal/4.jpg\", \"./images/normal/5.jpg\"],\n        fatChonk: [\"./images/fat/1.jpg\", \"./images/fat/2.jpg\", \"./images/fat/3.jpg\", \"./images/fat/4.jpg\"],\n        tooFatChonk: [\"./images/2chonk/1.jpg\", \"./images/2chonk/2.jpg\", \"./images/2chonk/3.jpg\", \"./images/2chonk/4.jpg\", \"./images/2chonk/5.jpg\"]\n      }\n    }\n\n    this.calcBmi = this.calcBmi.bind(this)\n    // this.handleChonk = this.handleChonk.bind(this)\n  }\n\n\n  handleHeightChange(event) {\n        this.setState({ height: event.target.value})\n  }\n\n\n  handleWeightChange(event) {\n        this.setState({ weight: event.target.value})\n  }\n\n    //limiting input to numbers\n\n  handleKeyPress(source, event) {\n      const allowedChars = \".0123456789\"\n      const currentChar = event.key\n      let found = false\n      for (let i = 0;  i < allowedChars.length; i++) {\n        if (currentChar === allowedChars[i]) {\n          found = true\n        }\n      }\n      if(found === false) {\n        event.preventDefault()\n        return\n      }\n\n      //limiting number input /height/weight\n    let currentValue = 0   \n          if (source === 'height') {\n            currentValue = parseInt(this.state.height + currentChar)\n            if (currentValue > 220) {\n              event.preventDefault()\n            }\n          } else {\n            currentValue = this.state.weight + currentChar\n            if (currentValue > 300) {\n              event.preventDefault()\n            }\n          }\n\n      \n  }\n\n\n  //calculating BMI, classifying the results w/images\n  \n    calcBmi(event) {\n      let bmi=(this.state.weight / (this.state.height/100 * this.state.height/100)).toFixed(1)\n      this.setState({bmiValue: bmi}) \n\n      if(this.state.weight === \"\") {\n        return null\n      }\n\n      if(this.state.height === \"\") {\n        return null\n      }\n\n      if(this.state.bmiValue < 18.5) { //thin\n        return \"You're slonky\"\n        \n        const randNum = Math.floor(Math.random() * this.state.AllChonkImg.slimChonk.length)\n        const randChonk = this.state.AllChonkImg.slimChonk[randNum]\n        this.setState({resultChonk: randChonk})\n        this.setState({ chonkVisibility: \"visibleChonk\" })\n      } \n\n      if(this.state.bmiValue >= 18.5 && this.state.bmiValue <= 24.9) { //normal\n        const randNum = Math.floor(Math.random() * this.state.AllChonkImg.normalChonk.length)\n        const randChonk = this.state.AllChonkImg.normalChonk[randNum]\n        this.setState({resultChonk: randChonk})\n        this.setState({ chonkVisibility: \"visibleChonk\" })      \n      }\n\n      if(this.state.bmiValue >= 25 && this.state.bmiValue <= 29.9) { //fat\n        const randNum = Math.floor(Math.random() * this.state.AllChonkImg.fatChonk.length)\n        const randChonk = this.state.AllChonkImg.fatChonk[randNum]\n        this.setState({resultChonk: randChonk})\n        this.setState({ chonkVisibility: \"visibleChonk\" })    \n      }  \n\n      if(this.state.bmiValue >= 30) { //obese\n        const randNum = Math.floor(Math.random() * this.state.AllChonkImg.tooFatChonk.length)\n        const randChonk = this.state.AllChonkImg.tooFatChonk[randNum]\n        this.setState({resultChonk: randChonk})\n        this.setState({ chonkVisibility: \"visibleChonk\" })\n      }\n\n    }\n\n\n    // clear button\n    clearBmi(event) {\n      event.preventDefault()\n      this.setState({height: \"\", weight: \"\", bmiValue: \"\"})\n      this.setState({ chonkVisibility: \"invisibleChonk\" })\n    }\n\n\n\n  render() {\n    return ( \n      <main>\n        <section id=\"container\"> \n          <h2>BMI Calculator</h2>\n            <form>\n              <p div=\"height\">Height (95cm-220cm)</p>\n                <input \n                  type=\"number\" \n                  name=\"height\" \n                  step=\"0.1\" \n                  placeholder=\"cm\" \n                  min=\"95\" \n                  max=\"220\"\n                  value={this.state.height}//kell?\n                  onChange={this.handleHeightChange.bind(this)}\n                  onKeyPress={this.handleKeyPress.bind(this, 'height')}\n\n                />\n        \n         <br />\n            \n               <p id=\"weight\">Weight (10kg-300kg)</p>\n                 <input \n                   type=\"number\" \n                   name=\"weight\" \n                   step=\"0.1\" \n                   placeholder=\"kg\" \n                   min=\"10\" \n                   max=\"300\"\n                   value={this.state.weight} // kell?\n                   onChange={this.handleWeightChange.bind(this)}\n                   onKeyPress={this.handleKeyPress.bind(this, 'weight')}\n\n               />\n        \n        <br />\n        \n        \n       <button \n          id=\"calculate\" \n          onClick={(event) => {\n            event.preventDefault()\n            this.calcBmi()\n          }}\n          >Calculate\n        </button>\n\n        \n        <br />\n\n        <button id=\"clear\" onClick={this.clearBmi.bind(this)}>Clear</button>\n\n        <br />\n\n\n\n     </form>\n    <div className={this.state.chonkVisibility}>\n      <img src={this.state.resultChonk} alt=\"\" />\n      <h2 className=\"result-top-text\">Your BMI result is {this.state.bmiValue}</h2>\n    </div>\n     \n    </section>\n   </main>\n  )\n }\n}\n\n\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}